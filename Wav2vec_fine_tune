{"metadata":{"colab":{"name":"Fine-tuning Wav2Vec2 for English ASR","provenance":[],"collapsed_sections":[],"toc_visible":true,"machine_shape":"hm","include_colab_link":true},"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"4fae0d04a34b4fbcbbac419ef522389d":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_04889e8a534846219c60b6c637ff9703","IPY_MODEL_dd0d9ccef1b34806a8989f882caca422","IPY_MODEL_cfcf385787a94992ac39070cad8fcada","IPY_MODEL_6d2c83e9574c4b0796e73ccc5ba2632e","IPY_MODEL_8f15f29ae18640d3ba9215ca91e764b7"],"layout":"IPY_MODEL_b58bd0d46cbc4d7ab932940941d2ad36"}},"04889e8a534846219c60b6c637ff9703":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b807a57d90ae41c1bfa3a54b121affd1","placeholder":"​","style":"IPY_MODEL_edbc56749e544622be7717992bd72dbc","value":"<center> <img\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.svg\nalt='Hugging Face'> <br> Copy a token from <a\nhref=\"https://huggingface.co/settings/tokens\" target=\"_blank\">your Hugging Face\ntokens page</a> and paste it below. <br> Immediately click login after copying\nyour token or it might be stored in plain text in this notebook file. </center>"}},"dd0d9ccef1b34806a8989f882caca422":{"model_module":"@jupyter-widgets/controls","model_name":"PasswordModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"PasswordModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"PasswordView","continuous_update":true,"description":"Token:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_3328f4a664d24ba89dbc892734a3ed58","placeholder":"​","style":"IPY_MODEL_e0c3115ae01a44848620d6f19a071542","value":""}},"cfcf385787a94992ac39070cad8fcada":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"Login","disabled":false,"icon":"","layout":"IPY_MODEL_ecc433611c5144d3a909627ffb08eb77","style":"IPY_MODEL_3378d5d15d0f4c45a286842339425003","tooltip":""}},"6d2c83e9574c4b0796e73ccc5ba2632e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_70914255a10141ef8882c4e69a4f4057","placeholder":"​","style":"IPY_MODEL_5ca38ad0652b4d27ba646d6b55298498","value":"\n<b>Pro Tip:</b> If you don't already have one, you can create a dedicated\n'notebooks' token with 'write' access, that you can then easily reuse for all\nnotebooks. <br> <i>Logging in with your username and password is deprecated and\nwon't be possible anymore in the near future. You can still use them for now by\nclicking below.</i> </center>"}},"8f15f29ae18640d3ba9215ca91e764b7":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"Use password","disabled":false,"icon":"","layout":"IPY_MODEL_84c3f51a7956477eaa1c9ecdeba5c00a","style":"IPY_MODEL_1eb4c98ebb084e8898b793265738b7fc","tooltip":""}},"b58bd0d46cbc4d7ab932940941d2ad36":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":"center","align_self":null,"border":null,"bottom":null,"display":"flex","flex":null,"flex_flow":"column","grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"50%"}},"b807a57d90ae41c1bfa3a54b121affd1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"edbc56749e544622be7717992bd72dbc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3328f4a664d24ba89dbc892734a3ed58":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e0c3115ae01a44848620d6f19a071542":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ecc433611c5144d3a909627ffb08eb77":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3378d5d15d0f4c45a286842339425003":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"70914255a10141ef8882c4e69a4f4057":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5ca38ad0652b4d27ba646d6b55298498":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"84c3f51a7956477eaa1c9ecdeba5c00a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1eb4c98ebb084e8898b793265738b7fc":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"aadac5aba97941f4922c2cdb74dadc6f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4b4bd3b71ffc46deaeaed4d7ad7a768e","IPY_MODEL_e225f2981fe7472d899a1fff0eb6bb8a","IPY_MODEL_8ba58dd1b97644869a58a1b5a390e96d"],"layout":"IPY_MODEL_dc086ef489044898b7ec0830d8175f56"}},"4b4bd3b71ffc46deaeaed4d7ad7a768e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a579ecba69ff45c096f3e1dabb535209","placeholder":"​","style":"IPY_MODEL_1e596bd81f984654b5e965a9e8159caf","value":"100%"}},"e225f2981fe7472d899a1fff0eb6bb8a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_162b2b0630244c2182042899074c222d","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_425c9b6bd9f74bfbbc1d72ffdceec0d0","value":2}},"8ba58dd1b97644869a58a1b5a390e96d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4c2a4d2dadf5422aba969cd5ab6eb762","placeholder":"​","style":"IPY_MODEL_3a1fb95b6101460fa5925cab3ba86cf6","value":" 2/2 [00:00&lt;00:00, 61.66it/s]"}},"dc086ef489044898b7ec0830d8175f56":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a579ecba69ff45c096f3e1dabb535209":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1e596bd81f984654b5e965a9e8159caf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"162b2b0630244c2182042899074c222d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"425c9b6bd9f74bfbbc1d72ffdceec0d0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4c2a4d2dadf5422aba969cd5ab6eb762":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3a1fb95b6101460fa5925cab3ba86cf6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"92b0669ac4c34f3daa4dac1eb3d12b1d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cc5ef0d5c963487e9f630101ba0d9572","IPY_MODEL_5929b873c33d4c559b36935102f33e78","IPY_MODEL_21ceaf0f53d444c396801784d3f1db45"],"layout":"IPY_MODEL_1decb0d7a7504439825a6e12c21fe8ed"}},"cc5ef0d5c963487e9f630101ba0d9572":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_285447fa0e1e4ae8b5346477ad397ceb","placeholder":"​","style":"IPY_MODEL_381bc655291b4effaa6460f7476b0e9b","value":"100%"}},"5929b873c33d4c559b36935102f33e78":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8f88e6872d3d45fca03ed5b89d67e6ab","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_68b713049fff4a10a14344a5ec358d5c","value":1}},"21ceaf0f53d444c396801784d3f1db45":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7802f2a76e6b4435b4c9c8bb1d40e28e","placeholder":"​","style":"IPY_MODEL_6013756a6b204b368184e09e40a4567c","value":" 1/1 [00:00&lt;00:00, 14.90ba/s]"}},"1decb0d7a7504439825a6e12c21fe8ed":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"285447fa0e1e4ae8b5346477ad397ceb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"381bc655291b4effaa6460f7476b0e9b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8f88e6872d3d45fca03ed5b89d67e6ab":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"68b713049fff4a10a14344a5ec358d5c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7802f2a76e6b4435b4c9c8bb1d40e28e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6013756a6b204b368184e09e40a4567c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"aaf920d2593846b1bc5824c610167721":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c9126b3964f141a2af5c611c339e8156","IPY_MODEL_2d8e6e61f14f4cba8bd07e73ca868caf","IPY_MODEL_efe617968ca54b26b0048c7d20af1ba8"],"layout":"IPY_MODEL_821399caca9242eca44d7232edafe213"}},"c9126b3964f141a2af5c611c339e8156":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b3a6d272dc4940b4824c86b22068d8f8","placeholder":"​","style":"IPY_MODEL_0c34c7a51c284cda95a8848bad451603","value":"100%"}},"2d8e6e61f14f4cba8bd07e73ca868caf":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_28e9858f73c3469aaf7e94c819bc5304","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9ad678ebacc941e78a97b0bd728819eb","value":1}},"efe617968ca54b26b0048c7d20af1ba8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_29bc21f75fe84b62861e859304a70a4c","placeholder":"​","style":"IPY_MODEL_dc7b87eab1a344be9c6c29e92e7278b8","value":" 1/1 [00:00&lt;00:00, 25.91ba/s]"}},"821399caca9242eca44d7232edafe213":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b3a6d272dc4940b4824c86b22068d8f8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0c34c7a51c284cda95a8848bad451603":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"28e9858f73c3469aaf7e94c819bc5304":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ad678ebacc941e78a97b0bd728819eb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"29bc21f75fe84b62861e859304a70a4c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dc7b87eab1a344be9c6c29e92e7278b8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a7725ad7a1774178bba1b39b48bee36b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_acc6c975316f4fc9af3f449ccaf71646","IPY_MODEL_2b48e3c58b284b32ae51a3c3afb13d85","IPY_MODEL_7748d6bd4e224b3f836a06b321e72de0"],"layout":"IPY_MODEL_b29aab47d701449181b8d8c715b09657"}},"acc6c975316f4fc9af3f449ccaf71646":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5cb2c62e3d6f426f8c17eec2fe6e23ae","placeholder":"​","style":"IPY_MODEL_f44a8453ba314ddbb153e1278eb59eec","value":"Upload file pytorch_model.bin: 100%"}},"2b48e3c58b284b32ae51a3c3afb13d85":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6ba56300bd3240629256a72060f36fde","max":377671575,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d8f4c2ce266a4a9284572af28ad9ad1c","value":377671575}},"7748d6bd4e224b3f836a06b321e72de0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4cdbe067372b4c32bc782f966aea7f42","placeholder":"​","style":"IPY_MODEL_afe17562ac7948edab0233eb3804d9cb","value":" 360M/360M [05:26&lt;00:00, 735kB/s]"}},"b29aab47d701449181b8d8c715b09657":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5cb2c62e3d6f426f8c17eec2fe6e23ae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f44a8453ba314ddbb153e1278eb59eec":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6ba56300bd3240629256a72060f36fde":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d8f4c2ce266a4a9284572af28ad9ad1c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4cdbe067372b4c32bc782f966aea7f42":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"afe17562ac7948edab0233eb3804d9cb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"00a02ff8b284413f853da9d7c41afedd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_73b586087e9447e688c97318bf6eba11","IPY_MODEL_6ba8f8fde3fc4050a304df11cc1d2c7c","IPY_MODEL_0ceb294ca03a4bf2ae5586ffbbb6f0fc"],"layout":"IPY_MODEL_ffa2bd3495f54f1c81f15ebf50fd4fee"}},"73b586087e9447e688c97318bf6eba11":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e53ec4e8ee3d44bb8b3bdcf323335c8a","placeholder":"​","style":"IPY_MODEL_ceef78fab0024c578976ad6c589c0d7f","value":"Upload file runs/May10_11-02-51_d58de38fbf77/1652180636.6085317/events.out.tfevents.1652180636.d58de38fbf77.96.3: 100%"}},"6ba8f8fde3fc4050a304df11cc1d2c7c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_35a9027e670146f3a25db0d06035fd1b","max":4825,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0cd65792216b4decaf24961bb33802d0","value":4825}},"0ceb294ca03a4bf2ae5586ffbbb6f0fc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_968f456d45ab4f25aeaf57b0c0ddc190","placeholder":"​","style":"IPY_MODEL_92ae2ab85efc40fa89da650ccbe85e21","value":" 4.71k/4.71k [05:26&lt;00:00, 13.9kB/s]"}},"ffa2bd3495f54f1c81f15ebf50fd4fee":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e53ec4e8ee3d44bb8b3bdcf323335c8a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ceef78fab0024c578976ad6c589c0d7f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"35a9027e670146f3a25db0d06035fd1b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0cd65792216b4decaf24961bb33802d0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"968f456d45ab4f25aeaf57b0c0ddc190":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"92ae2ab85efc40fa89da650ccbe85e21":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e1a34af59be04546808279b6e673c498":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_91a9bd637428473192d5ec47ba137268","IPY_MODEL_f11e33bc060746758ad638204b71955c","IPY_MODEL_ef69985b8f7c4662912a11a377e99b59"],"layout":"IPY_MODEL_9721f00cdfc942e8ab8a4faf8080ef2d"}},"91a9bd637428473192d5ec47ba137268":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_196c66080f944a61a537a0ddd9905248","placeholder":"​","style":"IPY_MODEL_e7d54319900548208c3852623ebc3dcf","value":"Upload file training_args.bin: 100%"}},"f11e33bc060746758ad638204b71955c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_adbd04cd03624b66a8c725f9a89647b6","max":3055,"min":0,"orientation":"horizontal","style":"IPY_MODEL_200b5fada23d45ff947953003d052605","value":3055}},"ef69985b8f7c4662912a11a377e99b59":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8c89f99cd7b9408eafbfbf8e0c56d39c","placeholder":"​","style":"IPY_MODEL_a40561b6f013481ba77fa137ab43b1c2","value":" 2.98k/2.98k [05:26&lt;?, ?B/s]"}},"9721f00cdfc942e8ab8a4faf8080ef2d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"196c66080f944a61a537a0ddd9905248":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e7d54319900548208c3852623ebc3dcf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"adbd04cd03624b66a8c725f9a89647b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"200b5fada23d45ff947953003d052605":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8c89f99cd7b9408eafbfbf8e0c56d39c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a40561b6f013481ba77fa137ab43b1c2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"63ee5e2413434249bd47a8d662ec0da6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d10215d60b9f471ab681a948ad143159","IPY_MODEL_bcb33e49c5ab412eb5b8cd823cf06706","IPY_MODEL_f23b78d30ff040f481b5584a83083b39"],"layout":"IPY_MODEL_fe39df4b5e9d41f6a0233bafb4522dd4"}},"d10215d60b9f471ab681a948ad143159":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6cac8e9fcefd4353a76244f89ff459e1","placeholder":"​","style":"IPY_MODEL_4f70c2c356074adf9aa7c1fb6b20f8e3","value":"Upload file runs/May10_11-02-51_d58de38fbf77/events.out.tfevents.1652180636.d58de38fbf77.96.2: 100%"}},"bcb33e49c5ab412eb5b8cd823cf06706":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4cc884973b734098a135619736b5f599","max":19164,"min":0,"orientation":"horizontal","style":"IPY_MODEL_fd72ea27c82843ceb5fdb74886fc5b44","value":19164}},"f23b78d30ff040f481b5584a83083b39":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_28b1ff0d507e40fb84e4083537207de4","placeholder":"​","style":"IPY_MODEL_bf2896c4b25147f0a303c748fa2b0cd9","value":" 18.7k/18.7k [05:26&lt;00:00, 48.2B/s]"}},"fe39df4b5e9d41f6a0233bafb4522dd4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6cac8e9fcefd4353a76244f89ff459e1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4f70c2c356074adf9aa7c1fb6b20f8e3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4cc884973b734098a135619736b5f599":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fd72ea27c82843ceb5fdb74886fc5b44":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"28b1ff0d507e40fb84e4083537207de4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bf2896c4b25147f0a303c748fa2b0cd9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"524b5795780746f5966c06b878cc0fbc":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8eb41fee8e1c452a9d69a07a266d871a","IPY_MODEL_f22febfc3bbe48058be84b2a20e906f5","IPY_MODEL_ab51fefefa1b464a9a780b80c6f0c020"],"layout":"IPY_MODEL_88fd1cb973f8485b97caa19b7801c3d3"}},"8eb41fee8e1c452a9d69a07a266d871a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3234edc4a75e4658acd19feef174e88f","placeholder":"​","style":"IPY_MODEL_6bfe6219ad934146a4d680e38ed19879","value":"Downloading: 100%"}},"f22febfc3bbe48058be84b2a20e906f5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_63e9fc689ea54fbfa7226cc9918977cb","max":215,"min":0,"orientation":"horizontal","style":"IPY_MODEL_dc034b4bf9e34963ab79f391c55d44ac","value":215}},"ab51fefefa1b464a9a780b80c6f0c020":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6b3288ffeef34c2a925d2554c7c4f521","placeholder":"​","style":"IPY_MODEL_116e45bbe2d640d18d6a47309692dc20","value":" 215/215 [00:00&lt;00:00, 8.22kB/s]"}},"88fd1cb973f8485b97caa19b7801c3d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3234edc4a75e4658acd19feef174e88f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6bfe6219ad934146a4d680e38ed19879":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"63e9fc689ea54fbfa7226cc9918977cb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dc034b4bf9e34963ab79f391c55d44ac":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6b3288ffeef34c2a925d2554c7c4f521":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"116e45bbe2d640d18d6a47309692dc20":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"66d5a397b26e4d66a97bc3b3159e96bd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_041870fd5bac43b394956252364a16c4","IPY_MODEL_26f6574d99724fb29159071dda6039b5","IPY_MODEL_55d0bfd5c746402f89e6b86a7ca37b3a"],"layout":"IPY_MODEL_b69bad861f014c20b4cb470c73b1fe37"}},"041870fd5bac43b394956252364a16c4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_940e030ce7ae40d68136ddf1a1a67736","placeholder":"​","style":"IPY_MODEL_c80bdd3bae794c08b81c950a33ff9ba0","value":"Downloading: 100%"}},"26f6574d99724fb29159071dda6039b5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7b0c8bc5bb66433384aeb47bf99001ae","max":217,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6b03d462bd0f4fbeab0df76bbb881621","value":217}},"55d0bfd5c746402f89e6b86a7ca37b3a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_be78bdab8638431e80c087a0fe9a7a8f","placeholder":"​","style":"IPY_MODEL_d44a1f0b3216469fb1ac597951f9471a","value":" 217/217 [00:00&lt;00:00, 8.74kB/s]"}},"b69bad861f014c20b4cb470c73b1fe37":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"940e030ce7ae40d68136ddf1a1a67736":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c80bdd3bae794c08b81c950a33ff9ba0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7b0c8bc5bb66433384aeb47bf99001ae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6b03d462bd0f4fbeab0df76bbb881621":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"be78bdab8638431e80c087a0fe9a7a8f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d44a1f0b3216469fb1ac597951f9471a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a0e897961bb049438847879cf082adf3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_820ac3ce474346728b80a609d47848ee","IPY_MODEL_045273b88fa04afba97bf7ba6027f164","IPY_MODEL_4847949da7b64782895b4fca8b432ec8"],"layout":"IPY_MODEL_427b99cf8b964a59bbbf0b4d04504906"}},"820ac3ce474346728b80a609d47848ee":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f652ea3e007c42669e445a7247bb0430","placeholder":"​","style":"IPY_MODEL_527bf8b3612b4da89479424c5b66681e","value":"Downloading: 100%"}},"045273b88fa04afba97bf7ba6027f164":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_708ff309676040119bccd6f21d1684f6","max":268,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6a8694b9181f4828ba3ef4ff828fd1c3","value":268}},"4847949da7b64782895b4fca8b432ec8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_90dbfe5bab604315b329a6a8fcf131b1","placeholder":"​","style":"IPY_MODEL_b1a51bfb07774b7bac783d1c4d5a680c","value":" 268/268 [00:00&lt;00:00, 11.2kB/s]"}},"427b99cf8b964a59bbbf0b4d04504906":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f652ea3e007c42669e445a7247bb0430":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"527bf8b3612b4da89479424c5b66681e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"708ff309676040119bccd6f21d1684f6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6a8694b9181f4828ba3ef4ff828fd1c3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"90dbfe5bab604315b329a6a8fcf131b1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b1a51bfb07774b7bac783d1c4d5a680c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6ca0c9b3d250425b9597de9baa6bd77b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b7d46c7f5da646eba0ed9e38fed6b4ee","IPY_MODEL_7291673613bb43848bec1abee7447078","IPY_MODEL_5c49d625a7f742f1a64820bc6f749f3a"],"layout":"IPY_MODEL_a6a5bcb980df41d1b3e7b581701eae16"}},"b7d46c7f5da646eba0ed9e38fed6b4ee":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6412d390b2ce416fae910d689c3f6e70","placeholder":"​","style":"IPY_MODEL_255c276a050446ed9df81f8eeb7c1178","value":"Downloading: 100%"}},"7291673613bb43848bec1abee7447078":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ddd975596c234b0eacc40ef18ef40778","max":85,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a5fd824b8eb64bb7b8d83354961927e6","value":85}},"5c49d625a7f742f1a64820bc6f749f3a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_17e3d063396848548af91c55c8f8e282","placeholder":"​","style":"IPY_MODEL_a3b48bc669674ff2a0bcce75a50e81eb","value":" 85.0/85.0 [00:00&lt;00:00, 3.59kB/s]"}},"a6a5bcb980df41d1b3e7b581701eae16":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6412d390b2ce416fae910d689c3f6e70":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"255c276a050446ed9df81f8eeb7c1178":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ddd975596c234b0eacc40ef18ef40778":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a5fd824b8eb64bb7b8d83354961927e6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"17e3d063396848548af91c55c8f8e282":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a3b48bc669674ff2a0bcce75a50e81eb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8fbdb230253a4152be95bf6229049f09":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_857f0c099d8549e98991a93c791db4c1","IPY_MODEL_16561789e2b9417a80ddcb6ef9d8676a","IPY_MODEL_050c9d6bfd1e4b6ebe67401183a8d397"],"layout":"IPY_MODEL_5874591082f944ff9b32202a1edbfd60"}},"857f0c099d8549e98991a93c791db4c1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8c968b160d3d4fbb998840734f9f07e4","placeholder":"​","style":"IPY_MODEL_d2fd7c9e56b1419f9d23a10c260a7c7d","value":""}},"16561789e2b9417a80ddcb6ef9d8676a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4a03fb6d945f4102bc4f7192195d810d","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8ab2466b187047fbbe4d8b72455b1108","value":1}},"050c9d6bfd1e4b6ebe67401183a8d397":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89472d79793e4db9afa6845fb016c8ad","placeholder":"​","style":"IPY_MODEL_f5e79b8c3a634eae8a555f18b9dc9bd6","value":" 1680/? [00:55&lt;00:00, 30.41ex/s]"}},"5874591082f944ff9b32202a1edbfd60":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8c968b160d3d4fbb998840734f9f07e4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2fd7c9e56b1419f9d23a10c260a7c7d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4a03fb6d945f4102bc4f7192195d810d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"8ab2466b187047fbbe4d8b72455b1108":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"89472d79793e4db9afa6845fb016c8ad":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f5e79b8c3a634eae8a555f18b9dc9bd6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"<a href=\"https://colab.research.google.com/github/patrickvonplaten/notebooks/blob/master/Fine_tuning_Wav2Vec2_for_English_ASR.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>","metadata":{"id":"view-in-github","colab_type":"text"}},{"cell_type":"markdown","source":"# **Fine-tuning Wav2Vec2 for English ASR with 🤗 Transformers**","metadata":{"id":"LBSYoWbi-45k"}},{"cell_type":"markdown","source":"Wav2Vec2 is a pretrained model for Automatic Speech Recognition (ASR) and was released in [September 2020](https://ai.facebook.com/blog/wav2vec-20-learning-the-structure-of-speech-from-raw-audio/) by Alexei Baevski, Michael Auli, and Alex Conneau.\n\nUsing a novel contrastive pretraining objective, Wav2Vec2 learns powerful speech representations from more than 50.000 hours of unlabeled speech. Similar, to [BERT's masked language modeling](http://jalammar.github.io/illustrated-bert/), the model learns contextualized speech representations by randomly masking feature vectors before passing them to a transformer network.\n\n![wav2vec2_structure](https://raw.githubusercontent.com/patrickvonplaten/scientific_images/master/wav2vec2.png)\n\nFor the first time, it has been shown that pretraining, followed by fine-tuning on very little labeled speech data achieves competitive results to state-of-the-art ASR systems. Using as little as 10 minutes of labeled data, Wav2Vec2 yields a word error rate (WER) of less than 5% on the clean test set of [LibriSpeech](https://huggingface.co/datasets/librispeech_asr) - *cf.* with Table 9 of the [paper](https://arxiv.org/pdf/2006.11477.pdf).","metadata":{"id":"V7YOT2mnUiea"}},{"cell_type":"markdown","source":"In this notebook, we will give an in-detail explanation of how Wav2Vec2's pretrained checkpoints can be fine-tuned on any English ASR dataset. Note that in this notebook, we will fine-tune Wav2Vec2 without making use of a language model. It is much simpler to use Wav2Vec2 without a language model as an end-to-end ASR system and it has been shown that a standalone Wav2Vec2 acoustic model achieves impressive results. For demonstration purposes, we fine-tune the \"base\"-sized [pretrained checkpoint](https://huggingface.co/facebook/wav2vec2-base) on the rather small [Timit](https://huggingface.co/datasets/timit_asr) dataset that contains just 5h of training data.","metadata":{"id":"nT_QrfWtsxIz"}},{"cell_type":"markdown","source":"Wav2Vec2 is fine-tuned using Connectionist Temporal Classification (CTC), which is an algorithm that is used to train neural networks for sequence-to-sequence problems and mainly in Automatic Speech Recognition and handwriting recognition. \n\nI highly recommend reading the blog post [Sequence Modeling with CTC (2017)](https://distill.pub/2017/ctc/) very well-written blog post by Awni Hannun.","metadata":{"id":"Gx9OdDYrCtQ1"}},{"cell_type":"markdown","source":"First, let's try to get a good GPU in our colab! With Google Colab's free version it's sadly becoming much harder to get access to a good GPU. With Google Colab Pro, one has a much easier time getting access to a V100 or P100 GPU however.","metadata":{"id":"qW3J3rBizeds"}},{"cell_type":"code","source":"gpu_info = !nvidia-smi\ngpu_info = '\\n'.join(gpu_info)\nif gpu_info.find('failed') >= 0:\n  print('Not connected to a GPU')\nelse:\n  print(gpu_info)","metadata":{"id":"SLAufgh_xxj7","colab":{"base_uri":"https://localhost:8080/"},"outputId":"56da9201-624d-4dd2-ad8f-1d2e9c829723","execution":{"iopub.status.busy":"2024-04-30T17:03:36.848059Z","iopub.status.idle":"2024-04-30T17:03:36.848395Z","shell.execute_reply.started":"2024-04-30T17:03:36.848226Z","shell.execute_reply":"2024-04-30T17:03:36.848241Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Before we start, let's install both `datasets` and `transformers` from master. Also, we need the `librosa` package to load audio files and the `jiwer` to evaluate our fine-tuned model using the [word error rate (WER)](https://huggingface.co/metrics/wer) metric ${}^1$.","metadata":{"id":"e335hPmdtASZ"}},{"cell_type":"code","source":"%%capture\n!pip install datasets==2.13.1\n!pip install transformers==4.40.1\n!pip install jiwer","metadata":{"id":"c8eh87Hoee5d","execution":{"iopub.status.busy":"2024-04-30T17:03:36.849826Z","iopub.status.idle":"2024-04-30T17:03:36.850262Z","shell.execute_reply.started":"2024-04-30T17:03:36.850041Z","shell.execute_reply":"2024-04-30T17:03:36.850059Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Next we strongly suggest to upload your training checkpoints directly to the [🤗 Hub](https://huggingface.co/) while training. The [🤗 Hub](https://huggingface.co/) has integrated version control so you can be sure that no model checkpoint is getting lost during training. \n\nTo do so you have to store your authentication token from the Hugging Face website (sign up [here](https://huggingface.co/join) if you haven't already!)","metadata":{"id":"8_6kYmDMH9lR"}},{"cell_type":"code","source":"from huggingface_hub import notebook_login\n\nnotebook_login()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":385,"referenced_widgets":["4fae0d04a34b4fbcbbac419ef522389d","04889e8a534846219c60b6c637ff9703","dd0d9ccef1b34806a8989f882caca422","cfcf385787a94992ac39070cad8fcada","6d2c83e9574c4b0796e73ccc5ba2632e","8f15f29ae18640d3ba9215ca91e764b7","b58bd0d46cbc4d7ab932940941d2ad36","b807a57d90ae41c1bfa3a54b121affd1","edbc56749e544622be7717992bd72dbc","3328f4a664d24ba89dbc892734a3ed58","e0c3115ae01a44848620d6f19a071542","ecc433611c5144d3a909627ffb08eb77","3378d5d15d0f4c45a286842339425003","70914255a10141ef8882c4e69a4f4057","5ca38ad0652b4d27ba646d6b55298498","84c3f51a7956477eaa1c9ecdeba5c00a","1eb4c98ebb084e8898b793265738b7fc"]},"id":"zFLBDyzQIA3R","outputId":"fb99cad5-09f1-47b9-aeec-edd541e11603","execution":{"iopub.status.busy":"2024-04-30T17:03:36.852897Z","iopub.status.idle":"2024-04-30T17:03:36.853361Z","shell.execute_reply.started":"2024-04-30T17:03:36.853117Z","shell.execute_reply":"2024-04-30T17:03:36.853135Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"\nThen you need to install Git-LFS to upload your model checkpoints:","metadata":{"id":"zCyw5D23IQ1F"}},{"cell_type":"code","source":"%%capture\n!apt install git-lfs","metadata":{"id":"Q9BnQDhOITBC","execution":{"iopub.status.busy":"2024-04-30T17:03:36.882433Z","iopub.execute_input":"2024-04-30T17:03:36.882753Z","iopub.status.idle":"2024-04-30T17:03:40.336064Z","shell.execute_reply.started":"2024-04-30T17:03:36.882728Z","shell.execute_reply":"2024-04-30T17:03:40.334680Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"\n\n\n---\n\n${}^1$ Timit is usually evaluated using the phoneme error rate (PER), but by far the most common metric in ASR is the word error rate (WER). To keep this notebook as general as possible we decided to evaluate the model using WER.","metadata":{"id":"Mn9swf6EQ9Vd"}},{"cell_type":"markdown","source":"## Prepare Data, Tokenizer, Feature Extractor","metadata":{"id":"0mW-C1Nt-j7k"}},{"cell_type":"markdown","source":"ASR models transcribe speech to text, which means that we both need a feature extractor that processes the speech signal to the model's input format, *e.g.* a feature vector, and a tokenizer that processes the model's output format to text. \n\nIn 🤗 Transformers, the Wav2Vec2 model is thus accompanied by both a tokenizer, called [Wav2Vec2CTCTokenizer](https://huggingface.co/transformers/master/model_doc/wav2vec2.html#wav2vec2ctctokenizer), and a feature extractor, called [Wav2Vec2FeatureExtractor](https://huggingface.co/transformers/master/model_doc/wav2vec2.html#wav2vec2featureextractor).\n\nLet's start by creating the tokenizer responsible for decoding the model's predictions.","metadata":{"id":"BeBosnY9BH3e"}},{"cell_type":"markdown","source":"### Create Wav2Vec2CTCTokenizer","metadata":{"id":"sEXEWEJGQPqD"}},{"cell_type":"markdown","source":"The [pretrained Wav2Vec2 checkpoint]( ) maps the speech signal to a sequence of context representations as illustrated in the figure above. A fine-tuned Wav2Vec2 checkpoint needs to map this sequence of context representations to its corresponding transcription so that a linear layer has to be added on top of the transformer block (shown in yellow). This linear layer is used to classifies each context representation to a token class analogous how, *e.g.*, after pretraining a linear layer is added on top of BERT's embeddings for further classification - *cf.* with *\"BERT\"* section of this [blog post](https://huggingface.co/blog/warm-starting-encoder-decoder).\n\nThe output size of this layer corresponds to the number of tokens in the vocabulary, which does **not** depend on Wav2Vec2's pretraining task, but only on the labeled dataset used for fine-tuning. So in the first step, we will take a look at Timit and define a vocabulary based on the dataset's transcriptions.","metadata":{"id":"tWmMikuNEKl_"}},{"cell_type":"markdown","source":"Let's start by loading the dataset and taking a look at its structure.","metadata":{"id":"bee4g9rpLxll"}},{"cell_type":"code","source":"!pip install -U datasets\nfrom datasets import load_dataset, Audio, load_metric\n\ndataset = load_dataset( #train: 11344\n    \"asapp/slue-phase-2\", \"hvb\"\n)","metadata":{"id":"2MMXcWFFgCXU","colab":{"base_uri":"https://localhost:8080/","height":67,"referenced_widgets":["aadac5aba97941f4922c2cdb74dadc6f","4b4bd3b71ffc46deaeaed4d7ad7a768e","e225f2981fe7472d899a1fff0eb6bb8a","8ba58dd1b97644869a58a1b5a390e96d","dc086ef489044898b7ec0830d8175f56","a579ecba69ff45c096f3e1dabb535209","1e596bd81f984654b5e965a9e8159caf","162b2b0630244c2182042899074c222d","425c9b6bd9f74bfbbc1d72ffdceec0d0","4c2a4d2dadf5422aba969cd5ab6eb762","3a1fb95b6101460fa5925cab3ba86cf6"]},"outputId":"9df1f651-8b7a-4900-9674-4af012de0aa3","execution":{"iopub.status.busy":"2024-04-30T17:03:40.338356Z","iopub.execute_input":"2024-04-30T17:03:40.339088Z","iopub.status.idle":"2024-04-30T17:05:39.549603Z","shell.execute_reply.started":"2024-04-30T17:03:40.339047Z","shell.execute_reply":"2024-04-30T17:05:39.548808Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Requirement already satisfied: datasets in /opt/conda/lib/python3.10/site-packages (2.18.0)\nCollecting datasets\n  Downloading datasets-2.19.0-py3-none-any.whl.metadata (19 kB)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from datasets) (3.13.1)\nRequirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from datasets) (1.26.4)\nRequirement already satisfied: pyarrow>=12.0.0 in /opt/conda/lib/python3.10/site-packages (from datasets) (15.0.2)\nRequirement already satisfied: pyarrow-hotfix in /opt/conda/lib/python3.10/site-packages (from datasets) (0.6)\nRequirement already satisfied: dill<0.3.9,>=0.3.0 in /opt/conda/lib/python3.10/site-packages (from datasets) (0.3.8)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from datasets) (2.1.4)\nRequirement already satisfied: requests>=2.19.0 in /opt/conda/lib/python3.10/site-packages (from datasets) (2.31.0)\nRequirement already satisfied: tqdm>=4.62.1 in /opt/conda/lib/python3.10/site-packages (from datasets) (4.66.1)\nRequirement already satisfied: xxhash in /opt/conda/lib/python3.10/site-packages (from datasets) (3.4.1)\nRequirement already satisfied: multiprocess in /opt/conda/lib/python3.10/site-packages (from datasets) (0.70.16)\nRequirement already satisfied: fsspec<=2024.3.1,>=2023.1.0 in /opt/conda/lib/python3.10/site-packages (from fsspec[http]<=2024.3.1,>=2023.1.0->datasets) (2024.2.0)\nRequirement already satisfied: aiohttp in /opt/conda/lib/python3.10/site-packages (from datasets) (3.9.1)\nRequirement already satisfied: huggingface-hub>=0.21.2 in /opt/conda/lib/python3.10/site-packages (from datasets) (0.22.2)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from datasets) (21.3)\nRequirement already satisfied: pyyaml>=5.1 in /opt/conda/lib/python3.10/site-packages (from datasets) (6.0.1)\nRequirement already satisfied: attrs>=17.3.0 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets) (23.2.0)\nRequirement already satisfied: multidict<7.0,>=4.5 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets) (6.0.4)\nRequirement already satisfied: yarl<2.0,>=1.0 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets) (1.9.3)\nRequirement already satisfied: frozenlist>=1.1.1 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets) (1.4.1)\nRequirement already satisfied: aiosignal>=1.1.2 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets) (1.3.1)\nRequirement already satisfied: async-timeout<5.0,>=4.0 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets) (4.0.3)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.21.2->datasets) (4.9.0)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->datasets) (3.1.1)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->datasets) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->datasets) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->datasets) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->datasets) (2024.2.2)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas->datasets) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas->datasets) (2023.3.post1)\nRequirement already satisfied: tzdata>=2022.1 in /opt/conda/lib/python3.10/site-packages (from pandas->datasets) (2023.4)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.16.0)\nDownloading datasets-2.19.0-py3-none-any.whl (542 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m542.0/542.0 kB\u001b[0m \u001b[31m7.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m0:01\u001b[0m\n\u001b[?25hInstalling collected packages: datasets\n  Attempting uninstall: datasets\n    Found existing installation: datasets 2.18.0\n    Uninstalling datasets-2.18.0:\n      Successfully uninstalled datasets-2.18.0\nSuccessfully installed datasets-2.19.0\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Downloading readme:   0%|          | 0.00/8.13k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"871a474132ce475bb74aff5c04868684"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/383M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"811485caff6c45bd9b73380a98db3080"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/387M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d96e939bad7d46778549f331fc0efe70"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/110M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6d14a41f1c6b400fa462a1b5b6f7f784"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/407M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ae16ee8798b040d1a33389a3f4fa476e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/11344 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"54ac185c14784f44ad13294870410512"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/1690 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2ced37d74e544f308fadc66f9e084283"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/6121 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"545ccbbe42634dc490a5f11bea80174c"}},"metadata":{}}]},{"cell_type":"code","source":"dataset #it's devided into train, validation and test\n","metadata":{"execution":{"iopub.status.busy":"2024-04-30T17:05:39.550775Z","iopub.execute_input":"2024-04-30T17:05:39.551243Z","iopub.status.idle":"2024-04-30T17:05:39.558626Z","shell.execute_reply.started":"2024-04-30T17:05:39.551213Z","shell.execute_reply":"2024-04-30T17:05:39.557525Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['issue_id', 'audio', 'speaker_id', 'text', 'utt_index', 'channel', 'role', 'start_ms', 'duration_ms', 'intent', 'dialog_acts'],\n        num_rows: 11344\n    })\n    validation: Dataset({\n        features: ['issue_id', 'audio', 'speaker_id', 'text', 'utt_index', 'channel', 'role', 'start_ms', 'duration_ms', 'intent', 'dialog_acts'],\n        num_rows: 1690\n    })\n    test: Dataset({\n        features: ['issue_id', 'audio', 'speaker_id', 'text', 'utt_index', 'channel', 'role', 'start_ms', 'duration_ms', 'intent', 'dialog_acts'],\n        num_rows: 6121\n    })\n})"},"metadata":{}}]},{"cell_type":"markdown","source":"Many ASR datasets only provide the target text, `'text'` for each audio `'audio'` and file `'file'`. Timit actually provides much more information about each audio file, such as the `'phonetic_detail'`, etc., which is why many researchers choose to evaluate their models on phoneme classification instead of speech recognition when working with Timit. However, we want to keep the notebook as general as possible, so that we will only consider the transcribed text for fine-tuning.\n\n","metadata":{"id":"ri5y5N_HMANq"}},{"cell_type":"code","source":"dataset = dataset.remove_columns(['issue_id', 'speaker_id', 'utt_index', 'channel', 'role', 'start_ms', 'duration_ms', 'intent', 'dialog_acts'])","metadata":{"id":"kbyq6lDgQc2a","execution":{"iopub.status.busy":"2024-04-30T17:05:39.560879Z","iopub.execute_input":"2024-04-30T17:05:39.561237Z","iopub.status.idle":"2024-04-30T17:05:39.576023Z","shell.execute_reply.started":"2024-04-30T17:05:39.561212Z","shell.execute_reply":"2024-04-30T17:05:39.575170Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"Let's write a short function to display some random samples of the dataset and run it a couple of times to get a feeling for the transcriptions.","metadata":{"id":"Go9Hq4e4NDT9"}},{"cell_type":"code","source":"from datasets import ClassLabel\nimport random\nimport pandas as pd\nfrom IPython.display import display, HTML\n\ndef show_random_elements(dataset, num_examples=10):\n    assert num_examples <= len(dataset), \"Can't pick more elements than there are in the dataset.\"\n    picks = []\n    for _ in range(num_examples):\n        pick = random.randint(0, len(dataset)-1)\n        while pick in picks:\n            pick = random.randint(0, len(dataset)-1)\n        picks.append(pick)\n    \n    df = pd.DataFrame(dataset[picks])\n    display(HTML(df.to_html()))","metadata":{"id":"72737oog2F6U","execution":{"iopub.status.busy":"2024-04-30T17:05:39.577093Z","iopub.execute_input":"2024-04-30T17:05:39.577377Z","iopub.status.idle":"2024-04-30T17:05:39.584803Z","shell.execute_reply.started":"2024-04-30T17:05:39.577344Z","shell.execute_reply":"2024-04-30T17:05:39.583896Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"show_random_elements(dataset['train'].remove_columns(['audio']), num_examples=10)","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"K_JUmf3G3b9S","outputId":"64b7011f-5190-4230-a698-eeeae2e3ca8c","execution":{"iopub.status.busy":"2024-04-30T17:05:39.586001Z","iopub.execute_input":"2024-04-30T17:05:39.586372Z","iopub.status.idle":"2024-04-30T17:05:39.612782Z","shell.execute_reply.started":"2024-04-30T17:05:39.586340Z","shell.execute_reply":"2024-04-30T17:05:39.611971Z"},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>you have a wonderful day and thank you for calling</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>hello this is a harper valley national bank my name is elizabeth how can i help you today</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>what is your phone number</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>okay thank you</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>you too</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>is there anything else i can help you with</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>okay what is your address</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>the amount of the bill is one hundred dollars</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>my checking account</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>alright i have</td>\n    </tr>\n  </tbody>\n</table>"},"metadata":{}}]},{"cell_type":"markdown","source":"Alright! The transcriptions look very clean and the language seems to correspond more to written text than dialogue. This makes sense taking into account that [Timit](https://huggingface.co/datasets/timit_asr) is a read speech corpus.","metadata":{"id":"fowcOllGNNju"}},{"cell_type":"markdown","source":"We can see that the transcriptions contain some special characters, such as `,.?!;:`. Without a language model, it is much harder to classify speech chunks to such special characters because they don't really correspond to a characteristic sound unit. *E.g.*, the letter `\"s\"` has a more or less clear sound, whereas the special character `\".\"` does not.\nAlso in order to understand the meaning of a speech signal, it is usually not necessary to include special characters in the transcription.\n\nIn addition, we normalize the text to only have lower case letters and append a word separator token at the end.","metadata":{"id":"vq7OR50LN49m"}},{"cell_type":"code","source":"import re\nchars_to_ignore_regex = '[\\,\\?\\.\\!\\-\\;\\:\\\"]'\n\ndef remove_special_characters(batch):\n    batch[\"text\"] = re.sub(chars_to_ignore_regex, '', batch[\"text\"]).lower() + \" \"\n    return batch","metadata":{"id":"svKzVJ_hQGK6","execution":{"iopub.status.busy":"2024-04-30T17:05:39.614072Z","iopub.execute_input":"2024-04-30T17:05:39.614736Z","iopub.status.idle":"2024-04-30T17:05:39.619608Z","shell.execute_reply.started":"2024-04-30T17:05:39.614700Z","shell.execute_reply":"2024-04-30T17:05:39.618624Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"dataset = dataset.map(remove_special_characters)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XIHocAuTQbBR","outputId":"4b4453ef-2972-4af5-d29f-dd0062e5a3ba","execution":{"iopub.status.busy":"2024-04-30T17:05:39.620834Z","iopub.execute_input":"2024-04-30T17:05:39.621720Z","iopub.status.idle":"2024-04-30T17:05:44.402093Z","shell.execute_reply.started":"2024-04-30T17:05:39.621686Z","shell.execute_reply":"2024-04-30T17:05:44.401079Z"},"trusted":true},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/11344 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"00b3be06ece4435ea34864cd3a87c9fb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/1690 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5f253555ef4f4c7480ef18982a997bff"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/6121 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9efd8b27f523492abd68f4fdf8883ec7"}},"metadata":{}}]},{"cell_type":"code","source":"show_random_elements(dataset[\"train\"].remove_columns([\"audio\"]))","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"RBDRAAYxRE6n","outputId":"f579701c-24c2-4c11-dcb8-9c706eac425e","execution":{"iopub.status.busy":"2024-04-30T17:05:44.403328Z","iopub.execute_input":"2024-04-30T17:05:44.403634Z","iopub.status.idle":"2024-04-30T17:05:44.415182Z","shell.execute_reply.started":"2024-04-30T17:05:44.403590Z","shell.execute_reply":"2024-04-30T17:05:44.414271Z"},"trusted":true},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>from my checking account</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>eight a m</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>friday okay and what time would you like for your appointment</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>certainly i can help you with that</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>hi james my name is mary williams um i'd like to pay a bill</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>what is the bill amount</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>okay and what is the company name</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>how can i help you today</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>you're welcome thank you for calling and have a great day</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>we will send your payment to smart electric in the amount of one hundred and fourteen dollars is there anything else i can help you with</td>\n    </tr>\n  </tbody>\n</table>"},"metadata":{}}]},{"cell_type":"markdown","source":"Good! This looks better. We have removed most special characters from transcriptions and normalized them to lower-case only.\n\nIn CTC, it is common to classify speech chunks into letters, so we will do the same here. \nLet's extract all distinct letters of the training and test data and build our vocabulary from this set of letters.\n\nWe write a mapping function that concatenates all transcriptions into one long transcription and then transforms the string into a set of chars. \nIt is important to pass the argument `batched=True` to the `map(...)` function so that the mapping function has access to all transcriptions at once.","metadata":{"id":"jwfaptH5RJwA"}},{"cell_type":"code","source":"def extract_all_chars(batch):\n  all_text = \" \".join(batch[\"text\"])\n  vocab = list(set(all_text))\n  return {\"vocab\": [vocab], \"all_text\": [all_text]}","metadata":{"id":"LwCshNbbeRZR","execution":{"iopub.status.busy":"2024-04-30T17:05:44.418594Z","iopub.execute_input":"2024-04-30T17:05:44.418866Z","iopub.status.idle":"2024-04-30T17:05:48.020643Z","shell.execute_reply.started":"2024-04-30T17:05:44.418840Z","shell.execute_reply":"2024-04-30T17:05:48.019560Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"vocabs = dataset.map(extract_all_chars, batched=True, batch_size=-1, keep_in_memory=True, remove_columns=dataset.column_names[\"train\"])","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81,"referenced_widgets":["92b0669ac4c34f3daa4dac1eb3d12b1d","cc5ef0d5c963487e9f630101ba0d9572","5929b873c33d4c559b36935102f33e78","21ceaf0f53d444c396801784d3f1db45","1decb0d7a7504439825a6e12c21fe8ed","285447fa0e1e4ae8b5346477ad397ceb","381bc655291b4effaa6460f7476b0e9b","8f88e6872d3d45fca03ed5b89d67e6ab","68b713049fff4a10a14344a5ec358d5c","7802f2a76e6b4435b4c9c8bb1d40e28e","6013756a6b204b368184e09e40a4567c","aaf920d2593846b1bc5824c610167721","c9126b3964f141a2af5c611c339e8156","2d8e6e61f14f4cba8bd07e73ca868caf","efe617968ca54b26b0048c7d20af1ba8","821399caca9242eca44d7232edafe213","b3a6d272dc4940b4824c86b22068d8f8","0c34c7a51c284cda95a8848bad451603","28e9858f73c3469aaf7e94c819bc5304","9ad678ebacc941e78a97b0bd728819eb","29bc21f75fe84b62861e859304a70a4c","dc7b87eab1a344be9c6c29e92e7278b8"]},"id":"_m6uUjjcfbjH","outputId":"bf5e77dd-6ab3-4be1-e547-2d93b7fbbe74","execution":{"iopub.status.busy":"2024-04-30T17:05:48.022324Z","iopub.execute_input":"2024-04-30T17:05:48.022678Z","iopub.status.idle":"2024-04-30T17:05:48.249320Z","shell.execute_reply.started":"2024-04-30T17:05:48.022641Z","shell.execute_reply":"2024-04-30T17:05:48.248375Z"},"trusted":true},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/11344 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6a09850405844f86b4323158985e3162"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/1690 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9906129696fc4b1c8cf59d73025ffb01"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/6121 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5559d46a2e4c4a5895c18ec52f894aff"}},"metadata":{}}]},{"cell_type":"markdown","source":"Now, we create the union of all distinct letters in the training dataset and test dataset and convert the resulting list into an enumerated dictionary.","metadata":{"id":"7oVgE8RZSJNP"}},{"cell_type":"code","source":"vocab_list = list(set(vocabs[\"train\"][\"vocab\"][0]) | set(vocabs[\"test\"][\"vocab\"][0]))","metadata":{"id":"aQfneNsmlJI0","execution":{"iopub.status.busy":"2024-04-30T17:05:48.250391Z","iopub.execute_input":"2024-04-30T17:05:48.250639Z","iopub.status.idle":"2024-04-30T17:05:48.256693Z","shell.execute_reply.started":"2024-04-30T17:05:48.250616Z","shell.execute_reply":"2024-04-30T17:05:48.255646Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"vocab_dict = {v: k for k, v in enumerate(vocab_list)}\nvocab_dict","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_0kRndSvqaKk","outputId":"371f0b8c-6934-4e77-b1de-5089d6cdd52c","execution":{"iopub.status.busy":"2024-04-30T17:05:48.258131Z","iopub.execute_input":"2024-04-30T17:05:48.258502Z","iopub.status.idle":"2024-04-30T17:05:48.447253Z","shell.execute_reply.started":"2024-04-30T17:05:48.258467Z","shell.execute_reply":"2024-04-30T17:05:48.445575Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"{'u': 0,\n 'j': 1,\n 'g': 2,\n 'l': 3,\n 's': 4,\n 'o': 5,\n 'm': 6,\n 'q': 7,\n 'x': 8,\n 'f': 9,\n 'c': 10,\n ' ': 11,\n 'i': 12,\n 'y': 13,\n 'h': 14,\n 'z': 15,\n 'e': 16,\n \"'\": 17,\n 't': 18,\n 'b': 19,\n 'k': 20,\n 'w': 21,\n 'a': 22,\n 'n': 23,\n 'p': 24,\n 'v': 25,\n 'r': 26,\n 'd': 27}"},"metadata":{}}]},{"cell_type":"markdown","source":"Cool, we see that all letters of the alphabet occur in the dataset (which is not really surprising) and we also extracted the special characters `\" \"` and `'`. Note that we did not exclude those special characters because: \n\n- The model has to learn to predict when a word finished or else the model prediction would always be a sequence of chars which would make it impossible to separate words from each other.\n- In English, we need to keep the `'` character to differentiate between words, *e.g.*, `\"it's\"` and `\"its\"` which have very different meanings.","metadata":{"id":"JOSzbvs9SXT1"}},{"cell_type":"markdown","source":"To make it clearer that `\" \"` has its own token class, we give it a more visible character `|`. In addition, we also add an \"unknown\" token so that the model can later deal with characters not encountered in Timit's training set. \n\nFinally, we also add a padding token that corresponds to CTC's \"*blank token*\". The \"blank token\" is a core component of the CTC algorithm. For more information, please take a look at the \"Alignment\" section [here](https://distill.pub/2017/ctc/).","metadata":{"id":"b1fBRCn-TRaO"}},{"cell_type":"code","source":"vocab_dict[\"|\"] = vocab_dict[\" \"]\ndel vocab_dict[\" \"]","metadata":{"id":"npbIbBoLgaFX","execution":{"iopub.status.busy":"2024-04-30T17:05:48.448966Z","iopub.execute_input":"2024-04-30T17:05:48.449332Z","iopub.status.idle":"2024-04-30T17:05:48.506485Z","shell.execute_reply.started":"2024-04-30T17:05:48.449282Z","shell.execute_reply":"2024-04-30T17:05:48.505506Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"vocab_dict[\"[UNK]\"] = len(vocab_dict)\nvocab_dict[\"[PAD]\"] = len(vocab_dict)\nlen(vocab_dict)","metadata":{"id":"znF0bNunsjbl","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7561d386-18c8-4b64-aa84-832f7416d085","execution":{"iopub.status.busy":"2024-04-30T17:05:48.507800Z","iopub.execute_input":"2024-04-30T17:05:48.508087Z","iopub.status.idle":"2024-04-30T17:05:48.584419Z","shell.execute_reply.started":"2024-04-30T17:05:48.508062Z","shell.execute_reply":"2024-04-30T17:05:48.583352Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"30"},"metadata":{}}]},{"cell_type":"markdown","source":"Cool, now our vocabulary is complete and consists of 30 tokens, which means that the linear layer that we will add on top of the pretrained Wav2Vec2 checkpoint will have an output dimension of 30.","metadata":{"id":"SFPGfet8U5sL"}},{"cell_type":"markdown","source":"Let's now save the vocabulary as a json file.","metadata":{"id":"1CujRgBNVRaD"}},{"cell_type":"code","source":"import json\nwith open('vocab.json', 'w') as vocab_file:\n    json.dump(vocab_dict, vocab_file)","metadata":{"id":"ehyUoh9vk191","execution":{"iopub.status.busy":"2024-04-30T17:05:48.585777Z","iopub.execute_input":"2024-04-30T17:05:48.586175Z","iopub.status.idle":"2024-04-30T17:05:48.667552Z","shell.execute_reply.started":"2024-04-30T17:05:48.586140Z","shell.execute_reply":"2024-04-30T17:05:48.666268Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":"In a final step, we use the json file to instantiate an object of the `Wav2Vec2CTCTokenizer` class.","metadata":{"id":"SHJDaKlIVVim"}},{"cell_type":"code","source":"from transformers import Wav2Vec2CTCTokenizer\n\ntokenizer = Wav2Vec2CTCTokenizer(\"./vocab.json\", unk_token=\"[UNK]\", pad_token=\"[PAD]\", word_delimiter_token=\"|\")","metadata":{"id":"xriFGEWQkO4M","execution":{"iopub.status.busy":"2024-04-30T17:05:48.668991Z","iopub.execute_input":"2024-04-30T17:05:48.669385Z","iopub.status.idle":"2024-04-30T17:05:53.942861Z","shell.execute_reply.started":"2024-04-30T17:05:48.669348Z","shell.execute_reply":"2024-04-30T17:05:53.941715Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":"If one wants to re-use the just created tokenizer with the fine-tuned model of this notebook, it is strongly advised to upload the `tokenizer` to the [🤗 Hub](https://huggingface.co/). Let's call the repo to which we will upload the files\n`\"wav2vec2-base-timit-demo-colab\"`:","metadata":{"id":"P6L2EVWwIazG"}},{"cell_type":"code","source":"repo_name = \"wav2vec2-base-CALLCENTER\"","metadata":{"id":"1mbffBdxIl0M","execution":{"iopub.status.busy":"2024-04-30T17:05:53.944213Z","iopub.execute_input":"2024-04-30T17:05:53.944763Z","iopub.status.idle":"2024-04-30T17:05:53.949847Z","shell.execute_reply.started":"2024-04-30T17:05:53.944734Z","shell.execute_reply":"2024-04-30T17:05:53.948608Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":"and upload the tokenizer to the [🤗 Hub](https://huggingface.co/).","metadata":{"id":"pmpG2ftFIu3B"}},{"cell_type":"code","source":"\ntokenizer.push_to_hub(repo_name, use_auth_token = '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')","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"ScBMUz8jIxJi","outputId":"d1a44892-2cf6-4fba-e323-d28051d1edf5","execution":{"iopub.status.busy":"2024-04-30T17:05:53.951156Z","iopub.execute_input":"2024-04-30T17:05:53.951533Z","iopub.status.idle":"2024-04-30T17:05:59.042094Z","shell.execute_reply.started":"2024-04-30T17:05:53.951498Z","shell.execute_reply":"2024-04-30T17:05:59.041167Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/transformers/utils/hub.py:834: FutureWarning: The `use_auth_token` argument is deprecated and will be removed in v5 of Transformers. Please use `token` instead.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/5.17k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"01ac087bbd3449a9bcfa5c6becfa11c6"}},"metadata":{}},{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"CommitInfo(commit_url='https://huggingface.co/Niccogrillo/wav2vec2-base-CALLCENTER/commit/b3847658b6584c495ca9c5aa80c8bdf8ebdf761c', commit_message='Upload tokenizer', commit_description='', oid='b3847658b6584c495ca9c5aa80c8bdf8ebdf761c', pr_url=None, pr_revision=None, pr_num=None)"},"metadata":{}}]},{"cell_type":"markdown","source":"Great, you can see the just created repository under `https://huggingface.co/<your-username>/wav2vec2-base-timit-demo-colab`","metadata":{"id":"KvL12DrNV4cx"}},{"cell_type":"markdown","source":"### Create Wav2Vec2 Feature Extractor","metadata":{"id":"mYcIiR2FQ96i"}},{"cell_type":"markdown","source":"Speech is a continuous signal and to be treated by computers, it first has to be discretized, which is usually called **sampling**. The sampling rate hereby plays an important role in that it defines how many data points of the speech signal are measured per second. Therefore, sampling with a higher sampling rate results in a better approximation of the *real* speech signal but also necessitates more values per second.\n\nA pretrained checkpoint expects its input data to have been sampled more or less from the same distribution as the data it was trained on. The same speech signals sampled at two different rates have a very different distribution, *e.g.*, doubling the sampling rate results in data points being twice as long. Thus, \nbefore fine-tuning a pretrained checkpoint of an ASR model, it is crucial to verify that the sampling rate of the data that was used to pretrain the model matches the sampling rate of the dataset used to fine-tune the model.\n\nWav2Vec2 was pretrained on the audio data of [LibriSpeech](https://huggingface.co/datasets/librispeech_asr) and LibriVox which both were sampling with 16kHz. **Unfortunately our dataset was sampled with 8kHz. To solve this issue we can either change the striding of the feature extractor so to encode apporximately the same amount of audio OR upsample the audio to 16kHz** with for example torchaudio.\n","metadata":{"id":"Y6mDEyW719rx"}},{"cell_type":"markdown","source":"A Wav2Vec2 feature extractor object requires the following parameters to be instantiated:\n\n- `feature_size`: Speech models take a sequence of feature vectors as an input. While the length of this sequence obviously varies, the feature size should not. In the case of Wav2Vec2, the feature size is 1 because the model was trained on the raw speech signal ${}^2$.\n- `sampling_rate`: The sampling rate at which the model is trained on.\n- `padding_value`: For batched inference, shorter inputs need to be padded with a specific value\n- `do_normalize`: Whether the input should be *zero-mean-unit-variance* normalized or not. Usually, speech models perform better when normalizing the input\n- `return_attention_mask`: Whether the model should make use of an `attention_mask` for batched inference. In general, models should **always** make use of the `attention_mask` to mask padded tokens. However, due to a very specific design choice of `Wav2Vec2`'s \"base\" checkpoint, better results are achieved when using no `attention_mask`. This is **not** recommended for other speech models. For more information, one can take a look at [this](https://github.com/pytorch/fairseq/issues/3227) issue. **Important** If you want to use this notebook to fine-tune [large-lv60](https://huggingface.co/facebook/wav2vec2-large-lv60), this parameter should be set to `True`.","metadata":{"id":"KuUbPW7oV-B5"}},{"cell_type":"code","source":"from transformers import Wav2Vec2FeatureExtractor\n#nicco: changed sampling_rate from 16000 to 8000, will it work?\nfeature_extractor = Wav2Vec2FeatureExtractor(feature_size=1, sampling_rate=16000, padding_value=0.0, do_normalize=True, return_attention_mask=False)","metadata":{"id":"kAR0-2KLkopp","execution":{"iopub.status.busy":"2024-04-30T17:05:59.043344Z","iopub.execute_input":"2024-04-30T17:05:59.043633Z","iopub.status.idle":"2024-04-30T17:05:59.052369Z","shell.execute_reply.started":"2024-04-30T17:05:59.043606Z","shell.execute_reply":"2024-04-30T17:05:59.051465Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"markdown","source":"Great, Wav2Vec2's feature extraction pipeline is thereby fully defined!\n\nTo make the usage of Wav2Vec2 as user-friendly as possible, the feature extractor and tokenizer are *wrapped* into a single `Wav2Vec2Processor` class so that one only needs a `model` and `processor` object.","metadata":{"id":"qUETetgqYC3W"}},{"cell_type":"code","source":"from transformers import Wav2Vec2Processor\n\nprocessor = Wav2Vec2Processor(feature_extractor=feature_extractor, tokenizer=tokenizer)","metadata":{"id":"KYZtoW-tlZgl","execution":{"iopub.status.busy":"2024-04-30T17:05:59.053414Z","iopub.execute_input":"2024-04-30T17:05:59.053678Z","iopub.status.idle":"2024-04-30T17:05:59.066475Z","shell.execute_reply.started":"2024-04-30T17:05:59.053653Z","shell.execute_reply":"2024-04-30T17:05:59.065567Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":"Next, we can prepare the dataset.","metadata":{"id":"DrKnYuvDIoOO"}},{"cell_type":"markdown","source":"### Preprocess Data\n\nSo far, we have not looked at the actual values of the speech signal but just the transcription. In addition to `'text'`, our datasets include two more column names `'file'` and `'audio'`. `'file'` states the absolute path of the audio file. Let's take a look.","metadata":{"id":"YFmShnl7RE35"}},{"cell_type":"code","source":"dataset['train'][7]['audio']","metadata":{"execution":{"iopub.status.busy":"2024-04-30T17:05:59.067610Z","iopub.execute_input":"2024-04-30T17:05:59.067967Z","iopub.status.idle":"2024-04-30T17:06:07.441436Z","shell.execute_reply.started":"2024-04-30T17:05:59.067934Z","shell.execute_reply":"2024-04-30T17:06:07.440340Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"{'path': '0002f70f7386445b_21539_23369.wav',\n 'array': array([ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,\n        -3.05175781e-05, -3.05175781e-05,  0.00000000e+00]),\n 'sampling_rate': 16000}"},"metadata":{}}]},{"cell_type":"markdown","source":"`Wav2Vec2` expects the input in the format of a 1-dimensional array of 16 kHz. This means that the audio file has to be loaded and resampled.\n\n Thankfully, `datasets` does this automatically when calling the column `audio`. Let try it out. ","metadata":{"id":"BwxprOw4Nzrl"}},{"cell_type":"markdown","source":"We can see that the audio file has automatically been loaded. This is thanks to the new [`\"Audio\"` feature](https://huggingface.co/docs/datasets/package_reference/main_classes.html?highlight=audio#datasets.Audio) introduced in `datasets == 4.13.3`, which loads and resamples audio files on-the-fly upon calling.\n\nThe sampling rate is set to 16kHz which is what `Wav2Vec2` expects as an input.","metadata":{"id":"wSBIGEiaKHMn"}},{"cell_type":"markdown","source":"Great, let's listen to a couple of audio files to better understand the dataset and verify that the audio was correctly loaded. \n\n**Note**: *You can click the following cell a couple of times to listen to different speech samples.*","metadata":{"id":"SOckzFd4Mbzq"}},{"cell_type":"code","source":"import IPython.display as ipd\nimport numpy as np\nimport random\n\nrand_int = random.randint(0, len(dataset[\"train\"]))\n\nprint(dataset[\"train\"][rand_int][\"text\"])\nipd.Audio(data=np.asarray(dataset[\"train\"][rand_int][\"audio\"][\"array\"]), autoplay=True, rate=16000)","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":94},"id":"dueM6U7Ev0OA","outputId":"4220aef7-b6ef-452f-e7f9-905198a5b497","execution":{"iopub.status.busy":"2024-04-30T17:06:07.442622Z","iopub.execute_input":"2024-04-30T17:06:07.443192Z","iopub.status.idle":"2024-04-30T17:06:07.465077Z","shell.execute_reply.started":"2024-04-30T17:06:07.443161Z","shell.execute_reply":"2024-04-30T17:06:07.464100Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"and first is spelled out f i r s t \n","output_type":"stream"},{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"<IPython.lib.display.Audio object>","text/html":"\n                <audio  controls=\"controls\" autoplay=\"autoplay\">\n                    <source src=\"data:audio/wav;base64,\" type=\"audio/wav\" />\n                    Your browser does not support the audio element.\n                </audio>\n              "},"metadata":{}}]},{"cell_type":"markdown","source":"It can be heard, that the speakers change along with their speaking rate, accent, etc. Overall, the recordings sound relatively clear though, which is to be expected from a read speech corpus.\n\nLet's do a final check that the data is correctly prepared, by printing the shape of the speech input, its transcription, and the corresponding sampling rate.\n\n**Note**: *You can click the following cell a couple of times to verify multiple samples.*","metadata":{"id":"1MaL9J2dNVtG"}},{"cell_type":"code","source":"rand_int = random.randint(0, len(dataset[\"train\"]))\n\nprint(\"Target text:\", dataset[\"train\"][rand_int][\"text\"])\nprint(\"Input array shape:\", np.asarray(dataset[\"train\"][rand_int][\"audio\"][\"array\"]).shape)\nprint(\"Sampling rate:\", dataset[\"train\"][rand_int][\"audio\"][\"sampling_rate\"])","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Po2g7YPuRTx","outputId":"5a99494b-4cf6-46d2-a986-81ed4e1240dd","execution":{"iopub.status.busy":"2024-04-30T17:06:07.466462Z","iopub.execute_input":"2024-04-30T17:06:07.466745Z","iopub.status.idle":"2024-04-30T17:06:07.477801Z","shell.execute_reply.started":"2024-04-30T17:06:07.466718Z","shell.execute_reply":"2024-04-30T17:06:07.476834Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"Target text: hi my name is michael brown i would like to pay a bill \nInput array shape: (55200,)\nSampling rate: 16000\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Good! Everything looks fine - the data is a 1-dimensional array, the sampling rate always corresponds to 16kHz, and the target text is normalized.","metadata":{"id":"M9teZcSwOBJ4"}},{"cell_type":"markdown","source":"Finally, we can process the dataset to the format expected by the model for training. We will make use of the `map(...)` function.\n\nFirst, we load and resample the audio data, simply by calling `batch[\"audio\"]`.\nSecond, we extract the `input_values` from the loaded audio file. In our case, the `Wav2Vec2Processor` only normalizes the data. For other speech models, however, this step can include more complex feature extraction, such as [Log-Mel feature extraction](https://en.wikipedia.org/wiki/Mel-frequency_cepstrum).\nThird, we encode the transcriptions to label ids.\n\n**Note**: This mapping function is a good example of how the `Wav2Vec2Processor` class should be used. In \"normal\" context, calling `processor(...)` is redirected to `Wav2Vec2FeatureExtractor`'s call method. When wrapping the processor into the `as_target_processor` context, however, the same method is redirected to `Wav2Vec2CTCTokenizer`'s call method.\nFor more information please check the [docs](https://huggingface.co/transformers/master/model_doc/wav2vec2.html#transformers.Wav2Vec2Processor.__call__).","metadata":{"id":"k3Pbn5WvOYZF"}},{"cell_type":"code","source":"def prepare_dataset(batch):\n    audio = batch[\"audio\"]\n\n    # batched output is \"un-batched\" to ensure mapping is correct\n    batch[\"input_values\"] = processor(audio[\"array\"], sampling_rate=audio[\"sampling_rate\"]).input_values[0]\n    batch[\"input_length\"] = len(batch[\"input_values\"])\n    \n    with processor.as_target_processor():\n        batch[\"labels\"] = processor(batch[\"text\"]).input_ids\n    return batch","metadata":{"id":"eJY7I0XAwe9p","execution":{"iopub.status.busy":"2024-04-30T17:06:07.479209Z","iopub.execute_input":"2024-04-30T17:06:07.479604Z","iopub.status.idle":"2024-04-30T17:06:07.486075Z","shell.execute_reply.started":"2024-04-30T17:06:07.479567Z","shell.execute_reply":"2024-04-30T17:06:07.485192Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":"Let's apply the data preparation function to all examples.","metadata":{"id":"hVMZhH4-nP8-"}},{"cell_type":"code","source":"dataset = dataset.map(prepare_dataset, remove_columns=dataset.column_names[\"train\"], num_proc=4)","metadata":{"id":"-np9xYK-wl8q","colab":{"base_uri":"https://localhost:8080/"},"outputId":"da1c6465-a1e7-4408-e813-8d805a50cf3a","execution":{"iopub.status.busy":"2024-04-30T17:06:07.487345Z","iopub.execute_input":"2024-04-30T17:06:07.487711Z","iopub.status.idle":"2024-04-30T17:06:46.860145Z","shell.execute_reply.started":"2024-04-30T17:06:07.487677Z","shell.execute_reply":"2024-04-30T17:06:46.859078Z"},"trusted":true},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map (num_proc=4):   0%|          | 0/11344 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fd2b553b062d4306bf7b7250d36e74ca"}},"metadata":{}},{"name":"stderr","text":"2024-04-30 17:06:09.629863: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:09.629863: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:09.629881: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:09.629946: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:09.629947: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:09.629881: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:09.630015: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:09.630018: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:09.768229: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:09.768229: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:09.768253: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:09.768231: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Map (num_proc=4):   0%|          | 0/1690 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"eb0463acf19e4bc39ca885b6824d628d"}},"metadata":{}},{"name":"stderr","text":"2024-04-30 17:06:32.965148: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:32.965231: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:32.965212: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:32.965269: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:32.965895: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:32.965949: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:32.967481: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:32.967539: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:32.967577: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:32.969250: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:32.969460: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:32.971385: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Map (num_proc=4):   0%|          | 0/6121 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3266ac477e68445c964602bfb05d70c2"}},"metadata":{}},{"name":"stderr","text":"2024-04-30 17:06:38.377742: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:38.377830: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:38.378427: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:38.378477: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:38.378587: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:38.378662: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:38.379543: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-30 17:06:38.379582: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-30 17:06:38.380511: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:38.380652: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:38.383344: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2024-04-30 17:06:38.387695: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/transformers/models/wav2vec2/processing_wav2vec2.py:156: UserWarning: `as_target_processor` is deprecated and will be removed in v5 of Transformers. You can process your labels by using the argument `text` of the regular `__call__` method (either in the same call as your audio inputs, or in a separate call.\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Note**: Currently `datasets` make use of [`torchaudio`](https://pytorch.org/audio/stable/index.html) and [`librosa`](https://librosa.org/doc/latest/index.html) for audio loading and resampling. If you wish to implement your own costumized data loading/sampling, feel free to just make use of the `\"path\"` column instead and disregard the `\"audio\"` column.","metadata":{"id":"p_MuJSH8nTuQ"}},{"cell_type":"markdown","source":"Long input sequences require a lot of memory. Since `Wav2Vec2` is based on `self-attention` the memory requirement scales quadratically with the input length for long input sequences (*cf.* with [this](https://www.reddit.com/r/MachineLearning/comments/genjvb/d_why_is_the_maximum_input_sequence_length_of/) reddit post). For this demo, let's filter all sequences that are longer than 4 seconds out of the training dataset.","metadata":{"id":"M4J0bU1WsvAg"}},{"cell_type":"code","source":"max_input_length_in_sec = 4.0\ndataset[\"train\"] = dataset[\"train\"].filter(lambda x: x < max_input_length_in_sec * processor.feature_extractor.sampling_rate, input_columns=[\"input_length\"])","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nqGobEPUvG3v","outputId":"0cae58f9-2cd9-405a-ad60-7bb31e649911","execution":{"iopub.status.busy":"2024-04-30T17:06:46.861816Z","iopub.execute_input":"2024-04-30T17:06:46.862180Z","iopub.status.idle":"2024-04-30T17:06:46.926014Z","shell.execute_reply.started":"2024-04-30T17:06:46.862144Z","shell.execute_reply":"2024-04-30T17:06:46.925078Z"},"trusted":true},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":"Filter:   0%|          | 0/11344 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ef51844c855a4311aa9c962744f44d1f"}},"metadata":{}}]},{"cell_type":"markdown","source":"Awesome, now we are ready to start training!","metadata":{"id":"25Genil2v_Br"}},{"cell_type":"markdown","source":"## Training & Evaluation\n\nThe data is processed so that we are ready to start setting up the training pipeline. We will make use of 🤗's [Trainer](https://huggingface.co/transformers/master/main_classes/trainer.html?highlight=trainer) for which we essentially need to do the following:\n\n- Define a data collator. In contrast to most NLP models, Wav2Vec2 has a much larger input length than output length. *E.g.*, a sample of input length 50000 has an output length of no more than 100. Given the large input sizes, it is much more efficient to pad the training batches dynamically meaning that all training samples should only be padded to the longest sample in their batch and not the overall longest sample. Therefore, fine-tuning Wav2Vec2 requires a special padding data collator, which we will define below\n\n- Evaluation metric. During training, the model should be evaluated on the word error rate. We should define a `compute_metrics` function accordingly\n\n- Load a pretrained checkpoint. We need to load a pretrained checkpoint and configure it correctly for training.\n\n- Define the training configuration.\n\nAfter having fine-tuned the model, we will correctly evaluate it on the test data and verify that it has indeed learned to correctly transcribe speech.","metadata":{"id":"gYlQkKVoRUos"}},{"cell_type":"markdown","source":"### Set-up Trainer\n\nLet's start by defining the data collator. The code for the data collator was copied from [this example](https://github.com/huggingface/transformers/blob/9a06b6b11bdfc42eea08fa91d0c737d1863c99e3/examples/research_projects/wav2vec2/run_asr.py#L81).\n\nWithout going into too many details, in contrast to the common data collators, this data collator treats the `input_values` and `labels` differently and thus applies to separate padding functions on them (again making use of Wav2Vec2's context manager). This is necessary because in speech input and output are of different modalities meaning that they should not be treated by the same padding function.\nAnalogous to the common data collators, the padding tokens in the labels with `-100` so that those tokens are **not** taken into account when computing the loss.","metadata":{"id":"Slk403unUS91"}},{"cell_type":"code","source":"import torch\n\nfrom dataclasses import dataclass, field\nfrom typing import Any, Dict, List, Optional, Union\n\n@dataclass\nclass DataCollatorCTCWithPadding:\n    \"\"\"\n    Data collator that will dynamically pad the inputs received.\n    Args:\n        processor (:class:`~transformers.Wav2Vec2Processor`)\n            The processor used for proccessing the data.\n        padding (:obj:`bool`, :obj:`str` or :class:`~transformers.tokenization_utils_base.PaddingStrategy`, `optional`, defaults to :obj:`True`):\n            Select a strategy to pad the returned sequences (according to the model's padding side and padding index)\n            among:\n            * :obj:`True` or :obj:`'longest'`: Pad to the longest sequence in the batch (or no padding if only a single\n              sequence if provided).\n            * :obj:`'max_length'`: Pad to a maximum length specified with the argument :obj:`max_length` or to the\n              maximum acceptable input length for the model if that argument is not provided.\n            * :obj:`False` or :obj:`'do_not_pad'` (default): No padding (i.e., can output a batch with sequences of\n              different lengths).\n    \"\"\"\n\n    processor: Wav2Vec2Processor\n    padding: Union[bool, str] = True\n\n    def __call__(self, features: List[Dict[str, Union[List[int], torch.Tensor]]]) -> Dict[str, torch.Tensor]:\n        # split inputs and labels since they have to be of different lenghts and need\n        # different padding methods\n        input_features = [{\"input_values\": feature[\"input_values\"]} for feature in features]\n        label_features = [{\"input_ids\": feature[\"labels\"]} for feature in features]\n\n        batch = self.processor.pad(\n            input_features,\n            padding=self.padding,\n            return_tensors=\"pt\",\n        )\n        with self.processor.as_target_processor():\n            labels_batch = self.processor.pad(\n                label_features,\n                padding=self.padding,\n                return_tensors=\"pt\",\n            )\n\n        # replace padding with -100 to ignore loss correctly\n        labels = labels_batch[\"input_ids\"].masked_fill(labels_batch.attention_mask.ne(1), -100)\n\n        batch[\"labels\"] = labels\n\n        return batch","metadata":{"id":"tborvC9hx88e","execution":{"iopub.status.busy":"2024-04-30T17:06:46.933239Z","iopub.execute_input":"2024-04-30T17:06:46.933554Z","iopub.status.idle":"2024-04-30T17:06:49.599466Z","shell.execute_reply.started":"2024-04-30T17:06:46.933526Z","shell.execute_reply":"2024-04-30T17:06:49.598452Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"data_collator = DataCollatorCTCWithPadding(processor=processor, padding=True)","metadata":{"id":"lbQf5GuZyQ4_","execution":{"iopub.status.busy":"2024-04-30T17:06:49.600832Z","iopub.execute_input":"2024-04-30T17:06:49.601220Z","iopub.status.idle":"2024-04-30T17:06:49.612701Z","shell.execute_reply.started":"2024-04-30T17:06:49.601187Z","shell.execute_reply":"2024-04-30T17:06:49.611840Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"markdown","source":"Next, the evaluation metric is defined. As mentioned earlier, the \npredominant metric in ASR is the word error rate (WER), hence we will use it in this notebook as well.","metadata":{"id":"xO-Zdj-5cxXp"}},{"cell_type":"code","source":"!pip install jiwer\nwer_metric = load_metric(\"wer\")","metadata":{"id":"9Xsux2gmyXso","execution":{"iopub.status.busy":"2024-04-30T17:08:48.884183Z","iopub.execute_input":"2024-04-30T17:08:48.884599Z","iopub.status.idle":"2024-04-30T17:09:04.286094Z","shell.execute_reply.started":"2024-04-30T17:08:48.884563Z","shell.execute_reply":"2024-04-30T17:09:04.285063Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"Collecting jiwer\n  Downloading jiwer-3.0.3-py3-none-any.whl.metadata (2.6 kB)\nRequirement already satisfied: click<9.0.0,>=8.1.3 in /opt/conda/lib/python3.10/site-packages (from jiwer) (8.1.7)\nCollecting rapidfuzz<4,>=3 (from jiwer)\n  Downloading rapidfuzz-3.8.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nDownloading jiwer-3.0.3-py3-none-any.whl (21 kB)\nDownloading rapidfuzz-3.8.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.4 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.4/3.4 MB\u001b[0m \u001b[31m33.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0m\n\u001b[?25hInstalling collected packages: rapidfuzz, jiwer\nSuccessfully installed jiwer-3.0.3 rapidfuzz-3.8.1\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The model will return a sequence of logit vectors:\n$\\mathbf{y}_1, \\ldots, \\mathbf{y}_m$ with $\\mathbf{y}_1 = f_{\\theta}(x_1, \\ldots, x_n)[0]$ and $n >> m$.\n\nA logit vector $\\mathbf{y}_1$ contains the log-odds for each word in the vocabulary we defined earlier, thus $\\text{len}(\\mathbf{y}_i) =$ `config.vocab_size`. We are interested in the most likely prediction of the model and thus take the `argmax(...)` of the logits. Also, we transform the encoded labels back to the original string by replacing `-100` with the `pad_token_id` and decoding the ids while making sure that consecutive tokens are **not** grouped to the same token in CTC style ${}^1$.","metadata":{"id":"E1qZU5p-deqB"}},{"cell_type":"code","source":"def compute_metrics(pred):\n    pred_logits = pred.predictions\n    pred_ids = np.argmax(pred_logits, axis=-1)\n\n    pred.label_ids[pred.label_ids == -100] = processor.tokenizer.pad_token_id\n\n    pred_str = processor.batch_decode(pred_ids)\n    # we do not want to group tokens when computing the metrics\n    label_str = processor.batch_decode(pred.label_ids, group_tokens=False)\n\n    wer = wer_metric.compute(predictions=pred_str, references=label_str)\n\n    return {\"wer\": wer}","metadata":{"id":"1XZ-kjweyTy_","execution":{"iopub.status.busy":"2024-04-30T17:10:46.572843Z","iopub.execute_input":"2024-04-30T17:10:46.573796Z","iopub.status.idle":"2024-04-30T17:10:46.590293Z","shell.execute_reply.started":"2024-04-30T17:10:46.573759Z","shell.execute_reply":"2024-04-30T17:10:46.589327Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":"Now, we can load the pretrained `Wav2Vec2` checkpoint. The tokenizer's `pad_token_id` must be to define the model's `pad_token_id` or in the case of `Wav2Vec2ForCTC` also CTC's *blank token* ${}^2$. To save GPU memory, we enable PyTorch's [gradient checkpointing](https://pytorch.org/docs/stable/checkpoint.html) and also set the loss reduction to \"*mean*\".","metadata":{"id":"Xmgrx4bRwLIH"}},{"cell_type":"code","source":"from transformers import Wav2Vec2ForCTC\n\nmodel = Wav2Vec2ForCTC.from_pretrained(\n    \"facebook/wav2vec2-base\",\n    ctc_loss_reduction=\"mean\", \n    pad_token_id=processor.tokenizer.pad_token_id,\n)\n\n\n# model = Wav2Vec2ForCTC.from_pretrained(\n#     \"/kaggle/working/wav2vec2-base-CALLCENTER/runs/Apr30_14-41-21_a9ae076f28cb\",\n#     ctc_loss_reduction=\"mean\", \n#     pad_token_id=processor.tokenizer.pad_token_id,\n# )","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e7cqAWIayn6w","outputId":"0b87744a-98a0-4198-c9f6-2a0f46365058","execution":{"iopub.status.busy":"2024-04-30T17:10:48.916319Z","iopub.execute_input":"2024-04-30T17:10:48.917359Z","iopub.status.idle":"2024-04-30T17:11:14.436367Z","shell.execute_reply.started":"2024-04-30T17:10:48.917321Z","shell.execute_reply":"2024-04-30T17:11:14.435566Z"},"trusted":true},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/1.84k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f14ee6d2bf284b49a69485e91503f7ba"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/transformers/configuration_utils.py:363: UserWarning: Passing `gradient_checkpointing` to a config initialization is deprecated and will be removed in v5 Transformers. Using `model.gradient_checkpointing_enable()` instead, or if you are using the `Trainer` API, pass `gradient_checkpointing=True` in your `TrainingArguments`.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/380M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2a3e403ed4514186b818984014f76e14"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()\n  return self.fget.__get__(instance, owner)()\nSome weights of Wav2Vec2ForCTC were not initialized from the model checkpoint at facebook/wav2vec2-base and are newly initialized: ['lm_head.bias', 'lm_head.weight', 'wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original0', 'wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original1']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The first component of Wav2Vec2 consists of a stack of CNN layers that are used to extract acoustically meaningful - but contextually independent - features from the raw speech signal. This part of the model has already been sufficiently trained during pretrainind and as stated in the [paper](https://arxiv.org/abs/2006.11477) does not need to be fine-tuned anymore. \nThus, we can set the `requires_grad` to `False` for all parameters of the *feature extraction* part.","metadata":{"id":"1DwR3XLSzGDD"}},{"cell_type":"code","source":"model.freeze_feature_encoder()","metadata":{"id":"Et_NUAZjWppc","execution":{"iopub.status.busy":"2024-04-30T17:11:14.437801Z","iopub.execute_input":"2024-04-30T17:11:14.438305Z","iopub.status.idle":"2024-04-30T17:11:14.442714Z","shell.execute_reply.started":"2024-04-30T17:11:14.438276Z","shell.execute_reply":"2024-04-30T17:11:14.441794Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"markdown","source":"In a final step, we define all parameters related to training. \nTo give more explanation on some of the parameters:\n- `group_by_length` makes training more efficient by grouping training samples of similar input length into one batch. This can significantly speed up training time by heavily reducing the overall number of useless padding tokens that are passed through the model\n- `learning_rate` and `weight_decay` were heuristically tuned until fine-tuning has become stable. Note that those parameters strongly depend on the our dataset and might be suboptimal for other speech datasets.\n\nFor more explanations on other parameters, one can take a look at the [docs](https://huggingface.co/transformers/master/main_classes/trainer.html?highlight=trainer#trainingarguments).\n\nDuring training, a checkpoint will be uploaded asynchronously to the hub every 400 training steps. It allows you to also play around with the demo widget even while your model is still training.\n\n**Note**: If one does not want to upload the model checkpoints to the hub, simply set `push_to_hub=False`.","metadata":{"id":"lD4aGhQM0K-D"}},{"cell_type":"code","source":"from transformers import TrainingArguments\nimport wandb\nwandb.login()\n\ntraining_args = TrainingArguments(\n  output_dir=repo_name,\n  group_by_length=True,\n  per_device_train_batch_size=8,\n  evaluation_strategy=\"steps\",\n  num_train_epochs=30,\n  fp16=True,\n  gradient_checkpointing=True,\n  save_steps=500,\n  eval_steps=500,\n  logging_steps=500,\n  learning_rate=1e-4,\n  weight_decay=0.005,\n  warmup_steps=1000,\n  save_total_limit=2,\nresume_from_checkpoint = True,\nreport_to = \"wandb\"\n    \n)","metadata":{"id":"KbeKSV7uzGPP","colab":{"base_uri":"https://localhost:8080/"},"outputId":"502e0963-4b94-40c9-915a-531b35ef7e8a","execution":{"iopub.status.busy":"2024-04-30T17:11:42.999802Z","iopub.execute_input":"2024-04-30T17:11:43.000197Z","iopub.status.idle":"2024-04-30T17:12:15.717397Z","shell.execute_reply.started":"2024-04-30T17:11:43.000166Z","shell.execute_reply":"2024-04-30T17:12:15.716378Z"},"trusted":true},"execution_count":40,"outputs":[{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Logging into wandb.ai. (Learn how to deploy a W&B server locally: https://wandb.me/wandb-server)\n\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit:","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"  ········································\n"},{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Now, all instances can be passed to Trainer and we are ready to start training!","metadata":{"id":"OsW-WZcL1ZtN"}},{"cell_type":"code","source":"from transformers import Trainer\n\ntrainer = Trainer(\n    model=model,\n    data_collator=data_collator,\n    args=training_args,\n    compute_metrics=compute_metrics,\n    train_dataset=dataset[\"train\"],\n    eval_dataset=dataset[\"test\"],\n    tokenizer=processor.feature_extractor,\n)","metadata":{"id":"rY7vBmFCPFgC","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7d004e64-8aa4-49d1-8635-f6dd920470b1","execution":{"iopub.status.busy":"2024-04-30T17:06:51.431217Z","iopub.status.idle":"2024-04-30T17:06:51.431538Z","shell.execute_reply.started":"2024-04-30T17:06:51.431386Z","shell.execute_reply":"2024-04-30T17:06:51.431398Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"\n\n---\n\n${}^1$ To allow models to become independent of the speaker rate, in CTC, consecutive tokens that are identical are simply grouped as a single token. However, the encoded labels should not be grouped when decoding since they don't correspond to the predicted tokens of the model, which is why the `group_tokens=False` parameter has to be passed. If we wouldn't pass this parameter a word like `\"hello\"` would incorrectly be encoded, and decoded as `\"helo\"`.\n\n${}^2$ The blank token allows the model to predict a word, such as `\"hello\"` by forcing it to insert the blank token between the two l's. A CTC-conform prediction of `\"hello\"` of our model would be `[PAD] [PAD] \"h\" \"e\" \"e\" \"l\" \"l\" [PAD] \"l\" \"o\" \"o\" [PAD]`.","metadata":{"id":"UoXBx1JAA0DX"}},{"cell_type":"markdown","source":"### Training","metadata":{"id":"rpvZHM1xReIW"}},{"cell_type":"markdown","source":"Training will take between 90 and 270 minutes depending on the GPU allocated to this notebook. While the trained model yields satisfying results on *Timit*'s test data, it is by no means an optimally fine-tuned model. The purpose of this notebook is to demonstrate how Wav2Vec2's [base](https://huggingface.co/facebook/wav2vec2-base), [large](https://huggingface.co/facebook/wav2vec2-large), and [large-lv60](https://huggingface.co/facebook/wav2vec2-large-lv60) checkpoints can be fine-tuned on any English dataset.\n\nIn case you want to use this google colab to fine-tune your model, you should make sure that your training doesn't stop due to inactivity. A simple hack to prevent this is to paste the following code into the console of this tab (*right mouse click -> inspect -> Console tab and insert code*).","metadata":{"id":"j-3oKSzZ1hGq"}},{"cell_type":"markdown","source":"```javascript\nfunction ConnectButton(){\n    console.log(\"Connect pushed\"); \n    document.querySelector(\"#top-toolbar > colab-connect-button\").shadowRoot.querySelector(\"#connect\").click() \n}\nsetInterval(ConnectButton,60000);\n```","metadata":{"id":"VYYAvgkW4P0m"}},{"cell_type":"markdown","source":"Depending on what GPU was allocated to your google colab it might be possible that you are seeing an `\"out-of-memory\"` error here. In this case, it's probably best to reduce `per_device_train_batch_size` to 16 or even less and eventually make use of [`gradient_accumulation`](https://huggingface.co/transformers/master/main_classes/trainer.html#trainingarguments).","metadata":{"id":"PmY6yqd1zvzU"}},{"cell_type":"code","source":"trainer.train(resume_from_checkpoint = True)","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"_UEjJqGsQw24","outputId":"ef86cb55-632e-44fd-b9b2-6b804e7808df","execution":{"iopub.status.busy":"2024-04-30T17:06:51.433164Z","iopub.status.idle":"2024-04-30T17:06:51.433475Z","shell.execute_reply.started":"2024-04-30T17:06:51.433321Z","shell.execute_reply":"2024-04-30T17:06:51.433334Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# import wandb\n# run = wandb.init()\n# artifact = run.use_artifact('niccogrillo/huggingface/run-cape72yg-history:v0', type='wandb-history')\n# artifact_dir = artifact.download()","metadata":{"execution":{"iopub.status.busy":"2024-04-30T15:05:01.900449Z","iopub.execute_input":"2024-04-30T15:05:01.901337Z","iopub.status.idle":"2024-04-30T15:05:24.650388Z","shell.execute_reply.started":"2024-04-30T15:05:01.901300Z","shell.execute_reply":"2024-04-30T15:05:24.649490Z"},"trusted":true},"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Finishing last run (ID:lx90j7vc) before initializing another..."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"VBox(children=(Label(value='0.001 MB of 0.031 MB uploaded\\r'), FloatProgress(value=0.04331015559227963, max=1.…","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"<style>\n    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n    </style>\n<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>eval/loss</td><td>▁</td></tr><tr><td>eval/runtime</td><td>▁</td></tr><tr><td>eval/samples_per_second</td><td>▁</td></tr><tr><td>eval/steps_per_second</td><td>▁</td></tr><tr><td>eval/wer</td><td>▁</td></tr><tr><td>train/epoch</td><td>▁▁</td></tr><tr><td>train/global_step</td><td>▁▁</td></tr><tr><td>train/grad_norm</td><td>▁</td></tr><tr><td>train/learning_rate</td><td>▁</td></tr><tr><td>train/loss</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>eval/loss</td><td>3.94008</td></tr><tr><td>eval/runtime</td><td>230.0917</td></tr><tr><td>eval/samples_per_second</td><td>26.602</td></tr><tr><td>eval/steps_per_second</td><td>3.329</td></tr><tr><td>eval/wer</td><td>0.9656</td></tr><tr><td>train/epoch</td><td>0.40816</td></tr><tr><td>train/global_step</td><td>500</td></tr><tr><td>train/grad_norm</td><td>7.8088</td></tr><tr><td>train/learning_rate</td><td>5e-05</td></tr><tr><td>train/loss</td><td>3.923</td></tr></table><br/></div></div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View run <strong style=\"color:#cdcd00\">wandering-silence-2</strong> at: <a href='https://wandb.ai/niccogrillo/huggingface/runs/lx90j7vc' target=\"_blank\">https://wandb.ai/niccogrillo/huggingface/runs/lx90j7vc</a><br/> View project at: <a href='https://wandb.ai/niccogrillo/huggingface' target=\"_blank\">https://wandb.ai/niccogrillo/huggingface</a><br/>Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Find logs at: <code>./wandb/run-20240430_144721-lx90j7vc/logs</code>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Successfully finished last run (ID:lx90j7vc). Initializing new run:<br/>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Tracking run with wandb version 0.16.6"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Run data is saved locally in <code>/kaggle/working/wandb/run-20240430_150501-j6veiri1</code>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Syncing run <strong><a href='https://wandb.ai/niccogrillo/uncategorized/runs/j6veiri1' target=\"_blank\">rosy-river-1</a></strong> to <a href='https://wandb.ai/niccogrillo/uncategorized' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View project at <a href='https://wandb.ai/niccogrillo/uncategorized' target=\"_blank\">https://wandb.ai/niccogrillo/uncategorized</a>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View run at <a href='https://wandb.ai/niccogrillo/uncategorized/runs/j6veiri1' target=\"_blank\">https://wandb.ai/niccogrillo/uncategorized/runs/j6veiri1</a>"},"metadata":{}},{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m:   1 of 1 files downloaded.  \n","output_type":"stream"}]},{"cell_type":"code","source":"type(artifact)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T15:06:03.829420Z","iopub.execute_input":"2024-04-30T15:06:03.830190Z","iopub.status.idle":"2024-04-30T15:06:03.835926Z","shell.execute_reply.started":"2024-04-30T15:06:03.830156Z","shell.execute_reply":"2024-04-30T15:06:03.835066Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"wandb.sdk.artifacts.artifact.Artifact"},"metadata":{}}]},{"cell_type":"markdown","source":"The final WER should be around 0.3 which is reasonable given that state-of-the-art phoneme error rates (PER) are just below 0.1 (see [leaderboard](https://paperswithcode.com/sota/speech-recognition-on-timit)) and that WER is usually worse than PER.\n\nYou can now upload the result of the training to the Hub, just execute this instruction:","metadata":{"id":"UCyp-v3n4Zlt"}},{"cell_type":"code","source":"trainer.push_to_hub()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497,"referenced_widgets":["a7725ad7a1774178bba1b39b48bee36b","acc6c975316f4fc9af3f449ccaf71646","2b48e3c58b284b32ae51a3c3afb13d85","7748d6bd4e224b3f836a06b321e72de0","b29aab47d701449181b8d8c715b09657","5cb2c62e3d6f426f8c17eec2fe6e23ae","f44a8453ba314ddbb153e1278eb59eec","6ba56300bd3240629256a72060f36fde","d8f4c2ce266a4a9284572af28ad9ad1c","4cdbe067372b4c32bc782f966aea7f42","afe17562ac7948edab0233eb3804d9cb","00a02ff8b284413f853da9d7c41afedd","73b586087e9447e688c97318bf6eba11","6ba8f8fde3fc4050a304df11cc1d2c7c","0ceb294ca03a4bf2ae5586ffbbb6f0fc","ffa2bd3495f54f1c81f15ebf50fd4fee","e53ec4e8ee3d44bb8b3bdcf323335c8a","ceef78fab0024c578976ad6c589c0d7f","35a9027e670146f3a25db0d06035fd1b","0cd65792216b4decaf24961bb33802d0","968f456d45ab4f25aeaf57b0c0ddc190","92ae2ab85efc40fa89da650ccbe85e21","e1a34af59be04546808279b6e673c498","91a9bd637428473192d5ec47ba137268","f11e33bc060746758ad638204b71955c","ef69985b8f7c4662912a11a377e99b59","9721f00cdfc942e8ab8a4faf8080ef2d","196c66080f944a61a537a0ddd9905248","e7d54319900548208c3852623ebc3dcf","adbd04cd03624b66a8c725f9a89647b6","200b5fada23d45ff947953003d052605","8c89f99cd7b9408eafbfbf8e0c56d39c","a40561b6f013481ba77fa137ab43b1c2","63ee5e2413434249bd47a8d662ec0da6","d10215d60b9f471ab681a948ad143159","bcb33e49c5ab412eb5b8cd823cf06706","f23b78d30ff040f481b5584a83083b39","fe39df4b5e9d41f6a0233bafb4522dd4","6cac8e9fcefd4353a76244f89ff459e1","4f70c2c356074adf9aa7c1fb6b20f8e3","4cc884973b734098a135619736b5f599","fd72ea27c82843ceb5fdb74886fc5b44","28b1ff0d507e40fb84e4083537207de4","bf2896c4b25147f0a303c748fa2b0cd9"]},"id":"JYGQYBhHNsvj","outputId":"c60381d7-a4ec-4cfe-ec0b-0b16af963c3d","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"You can now share this model with all your friends, family, favorite pets: they can all load it with the identifier \"your-username/the-name-you-picked\" so for instance:","metadata":{"id":"djzwS5WeNu16"}},{"cell_type":"markdown","source":"```python\nfrom transformers import AutoModelForCTC, Wav2Vec2Processor\n\nmodel = AutoModelForCTC.from_pretrained(\"patrickvonplaten/wav2vec2-base-timit-demo-google-colab\")\nprocessor = Wav2Vec2Processor.from_pretrained(\"patrickvonplaten/wav2vec2-base-timit-demo-google-colab\")\n```","metadata":{"id":"Adm0LngNNxq7"}},{"cell_type":"markdown","source":"### Evaluate\n\nIn the final part, we run our model on some of the validation data to get a feeling for how well it works.\n\nLet's load the `processor` and `model`.","metadata":{"id":"nD4XP5IHncsY"}},{"cell_type":"code","source":"processor = Wav2Vec2Processor.from_pretrained(\"patrickvonplaten/wav2vec2-base-timit-demo-google-colab\")","metadata":{"id":"-rg0USDCnbo6","colab":{"base_uri":"https://localhost:8080/","height":718,"referenced_widgets":["524b5795780746f5966c06b878cc0fbc","8eb41fee8e1c452a9d69a07a266d871a","f22febfc3bbe48058be84b2a20e906f5","ab51fefefa1b464a9a780b80c6f0c020","88fd1cb973f8485b97caa19b7801c3d3","3234edc4a75e4658acd19feef174e88f","6bfe6219ad934146a4d680e38ed19879","63e9fc689ea54fbfa7226cc9918977cb","dc034b4bf9e34963ab79f391c55d44ac","6b3288ffeef34c2a925d2554c7c4f521","116e45bbe2d640d18d6a47309692dc20","66d5a397b26e4d66a97bc3b3159e96bd","041870fd5bac43b394956252364a16c4","26f6574d99724fb29159071dda6039b5","55d0bfd5c746402f89e6b86a7ca37b3a","b69bad861f014c20b4cb470c73b1fe37","940e030ce7ae40d68136ddf1a1a67736","c80bdd3bae794c08b81c950a33ff9ba0","7b0c8bc5bb66433384aeb47bf99001ae","6b03d462bd0f4fbeab0df76bbb881621","be78bdab8638431e80c087a0fe9a7a8f","d44a1f0b3216469fb1ac597951f9471a","a0e897961bb049438847879cf082adf3","820ac3ce474346728b80a609d47848ee","045273b88fa04afba97bf7ba6027f164","4847949da7b64782895b4fca8b432ec8","427b99cf8b964a59bbbf0b4d04504906","f652ea3e007c42669e445a7247bb0430","527bf8b3612b4da89479424c5b66681e","708ff309676040119bccd6f21d1684f6","6a8694b9181f4828ba3ef4ff828fd1c3","90dbfe5bab604315b329a6a8fcf131b1","b1a51bfb07774b7bac783d1c4d5a680c","6ca0c9b3d250425b9597de9baa6bd77b","b7d46c7f5da646eba0ed9e38fed6b4ee","7291673613bb43848bec1abee7447078","5c49d625a7f742f1a64820bc6f749f3a","a6a5bcb980df41d1b3e7b581701eae16","6412d390b2ce416fae910d689c3f6e70","255c276a050446ed9df81f8eeb7c1178","ddd975596c234b0eacc40ef18ef40778","a5fd824b8eb64bb7b8d83354961927e6","17e3d063396848548af91c55c8f8e282","a3b48bc669674ff2a0bcce75a50e81eb"]},"outputId":"ddfac637-7c6d-4df1-a07a-4f1278fff182"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stderr","text":"https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/preprocessor_config.json not found in cache or force_download set to True, downloading to /root/.cache/huggingface/transformers/tmpjyd34ogd\n"},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/215 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"524b5795780746f5966c06b878cc0fbc"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":"storing https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/preprocessor_config.json in cache at /root/.cache/huggingface/transformers/17fa07f6e2f88edf24c71037bed1b7cf0cf9acfef7d3353afb589689627542c1.0e3e6656f99a6f7b9eddd943463eb7f34363640fce9e87b047ebd50d4b112b50\n\ncreating metadata file for /root/.cache/huggingface/transformers/17fa07f6e2f88edf24c71037bed1b7cf0cf9acfef7d3353afb589689627542c1.0e3e6656f99a6f7b9eddd943463eb7f34363640fce9e87b047ebd50d4b112b50\n\nloading feature extractor configuration file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/preprocessor_config.json from cache at /root/.cache/huggingface/transformers/17fa07f6e2f88edf24c71037bed1b7cf0cf9acfef7d3353afb589689627542c1.0e3e6656f99a6f7b9eddd943463eb7f34363640fce9e87b047ebd50d4b112b50\n\nFeature extractor Wav2Vec2FeatureExtractor {\n\n  \"do_normalize\": true,\n\n  \"feature_extractor_type\": \"Wav2Vec2FeatureExtractor\",\n\n  \"feature_size\": 1,\n\n  \"padding_side\": \"right\",\n\n  \"padding_value\": 0.0,\n\n  \"return_attention_mask\": false,\n\n  \"sampling_rate\": 16000\n\n}\n\n\n\nhttps://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/tokenizer_config.json not found in cache or force_download set to True, downloading to /root/.cache/huggingface/transformers/tmpcsym765z\n"},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/217 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"66d5a397b26e4d66a97bc3b3159e96bd"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":"storing https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/tokenizer_config.json in cache at /root/.cache/huggingface/transformers/7bf2e07c1c7ed7e3d055d87aa6bd33c75e6883d98029ae3744fed6bea9e35095.59710b1a6a5501d31e746b6e464f5c44de3e55a58f80634196025936683a68a9\n\ncreating metadata file for /root/.cache/huggingface/transformers/7bf2e07c1c7ed7e3d055d87aa6bd33c75e6883d98029ae3744fed6bea9e35095.59710b1a6a5501d31e746b6e464f5c44de3e55a58f80634196025936683a68a9\n\nhttps://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/vocab.json not found in cache or force_download set to True, downloading to /root/.cache/huggingface/transformers/tmpptj3is25\n"},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/268 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a0e897961bb049438847879cf082adf3"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":"storing https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/vocab.json in cache at /root/.cache/huggingface/transformers/f739813380b0880ba302557f0f990f0f64e8efe81fcc91a4fce08206a91ee215.c44a036121683e19f1a033a1765d4344364cb4633a6cbf5cf51b153f2388abb1\n\ncreating metadata file for /root/.cache/huggingface/transformers/f739813380b0880ba302557f0f990f0f64e8efe81fcc91a4fce08206a91ee215.c44a036121683e19f1a033a1765d4344364cb4633a6cbf5cf51b153f2388abb1\n\nhttps://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/special_tokens_map.json not found in cache or force_download set to True, downloading to /root/.cache/huggingface/transformers/tmpckp9vkh1\n"},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/85.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6ca0c9b3d250425b9597de9baa6bd77b"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":"storing https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/special_tokens_map.json in cache at /root/.cache/huggingface/transformers/c239f3738252f8d8e83d9813ea82866aeec476c467a008db86229f4edc6490b0.a21d51735cf8667bcd610f057e88548d5d6a381401f6b4501a8bc6c1a9dc8498\n\ncreating metadata file for /root/.cache/huggingface/transformers/c239f3738252f8d8e83d9813ea82866aeec476c467a008db86229f4edc6490b0.a21d51735cf8667bcd610f057e88548d5d6a381401f6b4501a8bc6c1a9dc8498\n\nloading file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/vocab.json from cache at /root/.cache/huggingface/transformers/f739813380b0880ba302557f0f990f0f64e8efe81fcc91a4fce08206a91ee215.c44a036121683e19f1a033a1765d4344364cb4633a6cbf5cf51b153f2388abb1\n\nloading file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/tokenizer_config.json from cache at /root/.cache/huggingface/transformers/7bf2e07c1c7ed7e3d055d87aa6bd33c75e6883d98029ae3744fed6bea9e35095.59710b1a6a5501d31e746b6e464f5c44de3e55a58f80634196025936683a68a9\n\nloading file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/added_tokens.json from cache at None\n\nloading file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/special_tokens_map.json from cache at /root/.cache/huggingface/transformers/c239f3738252f8d8e83d9813ea82866aeec476c467a008db86229f4edc6490b0.a21d51735cf8667bcd610f057e88548d5d6a381401f6b4501a8bc6c1a9dc8498\n\nAdding <s> to the vocabulary\n\nAdding </s> to the vocabulary\n\nSpecial tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"}]},{"cell_type":"code","source":"model = Wav2Vec2ForCTC.from_pretrained(\"patrickvonplaten/wav2vec2-base-timit-demo-google-colab\").cuda()","metadata":{"id":"sSpFW3pDn23P","colab":{"base_uri":"https://localhost:8080/"},"outputId":"dd9ac831-3620-4b87-98b6-c85a57150a15"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stderr","text":"loading configuration file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/config.json from cache at /root/.cache/huggingface/transformers/7606a293c66b1cba6bb9a342dcffe3831dc19a120cfeeb9e57cdf6ffb9630f3f.3202909be16e9c482257d0c4d35b4f4c2558cea585027c729eed803ba4bf0d8e\n\nModel config Wav2Vec2Config {\n\n  \"_name_or_path\": \"facebook/wav2vec2-base\",\n\n  \"activation_dropout\": 0.0,\n\n  \"adapter_kernel_size\": 3,\n\n  \"adapter_stride\": 2,\n\n  \"add_adapter\": false,\n\n  \"apply_spec_augment\": true,\n\n  \"architectures\": [\n\n    \"Wav2Vec2ForCTC\"\n\n  ],\n\n  \"attention_dropout\": 0.1,\n\n  \"bos_token_id\": 1,\n\n  \"classifier_proj_size\": 256,\n\n  \"codevector_dim\": 256,\n\n  \"contrastive_logits_temperature\": 0.1,\n\n  \"conv_bias\": false,\n\n  \"conv_dim\": [\n\n    512,\n\n    512,\n\n    512,\n\n    512,\n\n    512,\n\n    512,\n\n    512\n\n  ],\n\n  \"conv_kernel\": [\n\n    10,\n\n    3,\n\n    3,\n\n    3,\n\n    3,\n\n    2,\n\n    2\n\n  ],\n\n  \"conv_stride\": [\n\n    5,\n\n    2,\n\n    2,\n\n    2,\n\n    2,\n\n    2,\n\n    2\n\n  ],\n\n  \"ctc_loss_reduction\": \"mean\",\n\n  \"ctc_zero_infinity\": false,\n\n  \"diversity_loss_weight\": 0.1,\n\n  \"do_stable_layer_norm\": false,\n\n  \"eos_token_id\": 2,\n\n  \"feat_extract_activation\": \"gelu\",\n\n  \"feat_extract_norm\": \"group\",\n\n  \"feat_proj_dropout\": 0.1,\n\n  \"feat_quantizer_dropout\": 0.0,\n\n  \"final_dropout\": 0.0,\n\n  \"freeze_feat_extract_train\": true,\n\n  \"hidden_act\": \"gelu\",\n\n  \"hidden_dropout\": 0.1,\n\n  \"hidden_size\": 768,\n\n  \"initializer_range\": 0.02,\n\n  \"intermediate_size\": 3072,\n\n  \"layer_norm_eps\": 1e-05,\n\n  \"layerdrop\": 0.0,\n\n  \"mask_channel_length\": 10,\n\n  \"mask_channel_min_space\": 1,\n\n  \"mask_channel_other\": 0.0,\n\n  \"mask_channel_prob\": 0.0,\n\n  \"mask_channel_selection\": \"static\",\n\n  \"mask_feature_length\": 10,\n\n  \"mask_feature_min_masks\": 0,\n\n  \"mask_feature_prob\": 0.0,\n\n  \"mask_time_length\": 10,\n\n  \"mask_time_min_masks\": 2,\n\n  \"mask_time_min_space\": 1,\n\n  \"mask_time_other\": 0.0,\n\n  \"mask_time_prob\": 0.05,\n\n  \"mask_time_selection\": \"static\",\n\n  \"model_type\": \"wav2vec2\",\n\n  \"no_mask_channel_overlap\": false,\n\n  \"no_mask_time_overlap\": false,\n\n  \"num_adapter_layers\": 3,\n\n  \"num_attention_heads\": 12,\n\n  \"num_codevector_groups\": 2,\n\n  \"num_codevectors_per_group\": 320,\n\n  \"num_conv_pos_embedding_groups\": 16,\n\n  \"num_conv_pos_embeddings\": 128,\n\n  \"num_feat_extract_layers\": 7,\n\n  \"num_hidden_layers\": 12,\n\n  \"num_negatives\": 100,\n\n  \"output_hidden_size\": 768,\n\n  \"pad_token_id\": 29,\n\n  \"proj_codevector_dim\": 256,\n\n  \"tdnn_dilation\": [\n\n    1,\n\n    2,\n\n    3,\n\n    1,\n\n    1\n\n  ],\n\n  \"tdnn_dim\": [\n\n    512,\n\n    512,\n\n    512,\n\n    512,\n\n    1500\n\n  ],\n\n  \"tdnn_kernel\": [\n\n    5,\n\n    3,\n\n    3,\n\n    1,\n\n    1\n\n  ],\n\n  \"torch_dtype\": \"float32\",\n\n  \"transformers_version\": \"4.17.0\",\n\n  \"use_weighted_layer_sum\": false,\n\n  \"vocab_size\": 32,\n\n  \"xvector_output_dim\": 512\n\n}\n\n\n\nloading weights file https://huggingface.co/patrickvonplaten/wav2vec2-base-timit-demo-google-colab/resolve/main/pytorch_model.bin from cache at /root/.cache/huggingface/transformers/666767bce47a87d50dfd1ceac759d5dc9db6eac8d185ae8f9a7dd388687c28c5.20bdf845b9896c1d0a213f03187b544f2a12b23d751b88c7b49a95d00bd946e1\n\nAll model checkpoint weights were used when initializing Wav2Vec2ForCTC.\n\n\n\nAll the weights of Wav2Vec2ForCTC were initialized from the model checkpoint at patrickvonplaten/wav2vec2-base-timit-demo-google-colab.\n\nIf your task is similar to the task the model of the checkpoint was trained on, you can already use Wav2Vec2ForCTC for predictions without further training.\n"}]},{"cell_type":"markdown","source":"Now, we will make use of the `map(...)` function to predict the transcription of every test sample and to save the prediction in the dataset itself. We will call the resulting dictionary `\"results\"`. \n\n**Note**: we evaluate the test data set with `batch_size=1` on purpose due to this [issue](https://github.com/pytorch/fairseq/issues/3227). Since padded inputs don't yield the exact same output as non-padded inputs, a better WER can be achieved by not padding the input at all.","metadata":{"id":"TUuZpB0v5jn_"}},{"cell_type":"code","source":"def map_to_result(batch):\n  with torch.no_grad():\n    input_values = torch.tensor(batch[\"input_values\"], device=\"cuda\").unsqueeze(0)\n    logits = model(input_values).logits\n\n  pred_ids = torch.argmax(logits, dim=-1)\n  batch[\"pred_str\"] = processor.batch_decode(pred_ids)[0]\n  batch[\"text\"] = processor.decode(batch[\"labels\"], group_tokens=False)\n  \n  return batch","metadata":{"id":"40naJl53n7jT"},"execution_count":94,"outputs":[]},{"cell_type":"code","source":"results = timit[\"test\"].map(map_to_result, remove_columns=timit[\"test\"].column_names)","metadata":{"id":"uPqH7gZqrGPi","colab":{"base_uri":"https://localhost:8080/","height":48,"referenced_widgets":["8fbdb230253a4152be95bf6229049f09","857f0c099d8549e98991a93c791db4c1","16561789e2b9417a80ddcb6ef9d8676a","050c9d6bfd1e4b6ebe67401183a8d397","5874591082f944ff9b32202a1edbfd60","8c968b160d3d4fbb998840734f9f07e4","d2fd7c9e56b1419f9d23a10c260a7c7d","4a03fb6d945f4102bc4f7192195d810d","8ab2466b187047fbbe4d8b72455b1108","89472d79793e4db9afa6845fb016c8ad","f5e79b8c3a634eae8a555f18b9dc9bd6"]},"outputId":"1eb633f5-c487-4cd1-8be6-aac4af385a2e"},"execution_count":95,"outputs":[{"output_type":"display_data","data":{"text/plain":["0ex [00:00, ?ex/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8fbdb230253a4152be95bf6229049f09"}},"metadata":{}}]},{"cell_type":"markdown","source":"Let's compute the overall WER now.","metadata":{"id":"-mqpdB8R6rty"}},{"cell_type":"code","source":"print(\"Test WER: {:.3f}\".format(wer_metric.compute(predictions=results[\"pred_str\"], references=results[\"text\"])))","metadata":{"id":"PmqAb4Isx8OK","colab":{"base_uri":"https://localhost:8080/"},"outputId":"d70180e0-77e4-458b-daff-61df307f500c"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stdout","text":"Test WER: 0.218\n"}]},{"cell_type":"markdown","source":"21.8% WER - not bad! Our demo model would have probably made it on the official [leaderboard](https://paperswithcode.com/sota/speech-recognition-on-timit).\n\nLet's take a look at some predictions to see what errors are made by the model.","metadata":{"id":"6Va94d8Y7Q98"}},{"cell_type":"code","source":"show_random_elements(results)","metadata":{"id":"odNDiFVRy53w","colab":{"base_uri":"https://localhost:8080/","height":363},"outputId":"cb787bc7-5346-449e-e314-202df442185a"},"execution_count":97,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pred_str</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>aim to balenge your employ you benefits package</td>\n","      <td>aim to balance your employee benefit package</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>the fog prevented them from ariving on tom</td>\n","      <td>the fog prevented them from arriving on time</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>young children should avoid exposure to contageous diseases</td>\n","      <td>young children should avoid exposure to contagious diseases</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>art official intelligence is for real</td>\n","      <td>artificial intelligence is for real</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>theire propes were two step latters a chair and a pame fen</td>\n","      <td>their props were two stepladders a chair and a palm fan</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>if people were more generous there would be no need for wealfar</td>\n","      <td>if people were more generous there would be no need for welfare</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>the fish began to leep frantically on the surface of the smalleaku</td>\n","      <td>the fish began to leap frantically on the surface of the small lake</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>her rite hand aques whenever the baramatric presuer changes</td>\n","      <td>her right hand aches whenever the barometric pressure changes</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>only lawyers loved milunears</td>\n","      <td>only lawyers love millionaires</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>the nearest synnegu may not be within walk in distance</td>\n","      <td>the nearest synagogue may not be within walking distance</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}}]},{"cell_type":"markdown","source":"It becomes clear that the predicted transcriptions are acoustically very similar to the target transcriptions, but often contain spelling or grammatical errors. This shouldn't be very surprising though given that we purely rely on Wav2Vec2 without making use of a language model.","metadata":{"id":"5HFCujhd9n4N"}},{"cell_type":"markdown","source":"Finally, to better understand how CTC works, it is worth taking a deeper look at the exact output of the model. Let's run the first test sample through the model, take the predicted ids and convert them to their corresponding tokens.","metadata":{"id":"a3ydKvUl9FTK"}},{"cell_type":"code","source":"model.to(\"cuda\")\n\nwith torch.no_grad():\n  logits = model(torch.tensor(timit[\"test\"][:1][\"input_values\"], device=\"cuda\")).logits\n\npred_ids = torch.argmax(logits, dim=-1)\n\n# convert ids to tokens\n\" \".join(processor.tokenizer.convert_ids_to_tokens(pred_ids[0].tolist()))","metadata":{"id":"AqaM45t87uM4","colab":{"base_uri":"https://localhost:8080/","height":73},"outputId":"2d181121-2184-48dc-a337-bb33194fd68b"},"execution_count":98,"outputs":[{"output_type":"execute_result","execution_count":98,"data":{"text/plain":["'[PAD] [PAD] [PAD] [PAD] [PAD] t t h h e | | | b [PAD] [PAD] [PAD] u u n n g g [PAD] [PAD] l l l l [PAD] o o o | | w w a a s s | | [PAD] [PAD] [PAD] p l l [PAD] e s s s s [PAD] n n t t [PAD] l l l y y | | [PAD] s s s i i t t t [PAD] u u u u u [PAD] [PAD] [PAD] [PAD] a a t t [PAD] e e d d | | [PAD] n n e e a a r | | t t h e e | | s s h h [PAD] [PAD] [PAD] [PAD] o o r r r r | [PAD] [PAD] [PAD] [PAD] [PAD] [PAD] [PAD] [PAD] [PAD]'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{}}]},{"cell_type":"markdown","source":"The output should make it a bit clearer how CTC works in practice. The model is to some extent invariant to speaking rate since it has learned to either just repeat the same token in case the speech chunk to be classified still corresponds to the same token. This makes CTC a very powerful algorithm for speech recognition since the speech file's transcription is often very much independent of its length.\n\nI again advise the reader to take a look at [this](https://distill.pub/2017/ctc) very nice blog post to better understand CTC.","metadata":{"id":"tdO8E28g-n5C"}}]}